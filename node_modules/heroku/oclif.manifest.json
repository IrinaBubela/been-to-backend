{
  "commands": {
    "console": {
      "aliases": [],
      "args": {},
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "size": {
          "char": "s",
          "description": "dyno size",
          "name": "size",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "env": {
          "char": "e",
          "description": "environment variables to set (use ';' to split multiple vars)",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "console",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "console.js"
      ]
    },
    "dashboard": {
      "aliases": [],
      "args": {},
      "description": "display information about favorite apps",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "dashboard",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "dashboard",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "dashboard.js"
      ]
    },
    "logs": {
      "aliases": [],
      "args": {},
      "description": "display recent log output\ndisable colors with --no-color, HEROKU_LOGS_COLOR=0, or HEROKU_COLOR=0",
      "examples": [
        "$ heroku logs --app=my-app",
        "$ heroku logs --num=50",
        "$ heroku logs --dyno=web --app=my-app",
        "$ heroku logs --app=my-app --tail"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "num": {
          "char": "n",
          "description": "number of lines to display",
          "name": "num",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "ps": {
          "char": "p",
          "description": "hidden alias for dyno",
          "hidden": true,
          "name": "ps",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "dyno": {
          "char": "d",
          "description": "only show output from this dyno type (such as \"web\" or \"worker\")",
          "name": "dyno",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "source": {
          "char": "s",
          "description": "only show output from this source (such as \"app\" or \"heroku\")",
          "name": "source",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tail": {
          "char": "t",
          "description": "continually stream logs",
          "name": "tail",
          "allowNo": false,
          "type": "boolean"
        },
        "force-colors": {
          "description": "force use of colors (even on non-tty output)",
          "name": "force-colors",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "logs",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "logs.js"
      ]
    },
    "rake": {
      "aliases": [],
      "args": {},
      "flags": {
        "app": {
          "char": "a",
          "description": "parent app used by review apps",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "size": {
          "char": "s",
          "description": "dyno size",
          "name": "size",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "exit-code": {
          "char": "x",
          "description": "passthrough the exit code of the remote command",
          "name": "exit-code",
          "allowNo": false,
          "type": "boolean"
        },
        "env": {
          "char": "e",
          "description": "environment variables to set (use ';' to split multiple vars)",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-tty": {
          "description": "force the command to not run in a tty",
          "name": "no-tty",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "rake",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "rake.js"
      ]
    },
    "regions": {
      "aliases": [],
      "args": {},
      "description": "list available regions for deployment",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "private": {
          "description": "show regions for private spaces",
          "name": "private",
          "allowNo": false,
          "type": "boolean"
        },
        "common": {
          "description": "show regions for common runtime",
          "name": "common",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "regions",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "regions",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "regions.js"
      ]
    },
    "status": {
      "aliases": [],
      "args": {},
      "description": "display current status of the Heroku platform",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "status",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "status.js"
      ]
    },
    "access:add": {
      "aliases": [],
      "args": {
        "email": {
          "name": "email",
          "required": true
        }
      },
      "description": "add new users to your app",
      "examples": [
        "$ heroku access:add user@email.com --app APP # add a collaborator to your app",
        "$ heroku access:add user@email.com --app APP --permissions deploy,manage,operate # permissions must be comma separated"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "permissions": {
          "char": "p",
          "description": "list of permissions comma separated",
          "name": "permissions",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "access:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "access",
        "add.js"
      ]
    },
    "access": {
      "aliases": [],
      "args": {},
      "description": "list who has access to an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "access",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "access",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "access",
        "index.js"
      ]
    },
    "access:remove": {
      "aliases": [],
      "args": {},
      "description": "remove users from a team app",
      "examples": "$ heroku access:remove user@email.com --app APP",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "access:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "example": "$ heroku access:remove user@email.com --app APP",
      "topic": "access",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "access",
        "remove.js"
      ]
    },
    "access:update": {
      "aliases": [],
      "args": {
        "email": {
          "name": "email",
          "required": true
        }
      },
      "description": "update existing collaborators on an team app",
      "flags": {
        "permissions": {
          "char": "p",
          "description": "comma-delimited list of permissions to update (deploy,manage,operate)",
          "name": "permissions",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "access:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "access",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "access",
        "update.js"
      ]
    },
    "addons:attach": {
      "aliases": [],
      "args": {
        "addon_name": {
          "name": "addon_name",
          "required": true
        }
      },
      "description": "attach an existing add-on resource to an app",
      "flags": {
        "as": {
          "description": "name for add-on attachment",
          "name": "as",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "credential": {
          "description": "credential name for scoped access to Heroku Postgres",
          "name": "credential",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "overwrite existing add-on attachment with same name",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:attach",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "attach.js"
      ]
    },
    "addons:create": {
      "aliases": [],
      "args": {
        "service:plan": {
          "name": "service:plan",
          "required": true
        }
      },
      "description": "Create a new add-on resource.\n\nIn order to add additional config items, please place them at the end of the command after a double-dash (--).\n",
      "examples": "Create an add-on resource:\n$heroku addons:create heroku-redis --app my-app\n\nCreate an add-on resource with additional config items:\n$heroku addons:create heroku-postgresql:standard-0 --app my-app -- --fork DATABASE\n",
      "flags": {
        "name": {
          "description": "name for the add-on resource",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "as": {
          "description": "name for the initial add-on attachment",
          "name": "as",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "overwrite existing config vars or existing add-on attachments",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait": {
          "description": "watch add-on creation status and exit when complete",
          "name": "wait",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "addons:add"
      ],
      "id": "addons:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "addons",
      "example": "Create an add-on resource:\n$heroku addons:create heroku-redis --app my-app\n\nCreate an add-on resource with additional config items:\n$heroku addons:create heroku-postgresql:standard-0 --app my-app -- --fork DATABASE\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "create.js"
      ]
    },
    "addons:destroy": {
      "aliases": [],
      "args": {
        "addonName": {
          "name": "addonName",
          "required": true
        }
      },
      "description": "permanently destroy an add-on resource",
      "examples": [
        "addons:destroy [ADDON]... [flags]"
      ],
      "flags": {
        "force": {
          "char": "f",
          "description": "allow destruction even if connected to other apps",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait": {
          "description": "watch add-on destruction status and exit when complete",
          "name": "wait",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "addons:remove"
      ],
      "id": "addons:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "destroy.js"
      ]
    },
    "addons:detach": {
      "aliases": [],
      "args": {
        "attachment_name": {
          "name": "attachment_name",
          "required": true
        }
      },
      "description": "detach an existing add-on resource from an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:detach",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "detach.js"
      ]
    },
    "addons:docs": {
      "aliases": [],
      "args": {
        "addon": {
          "name": "addon",
          "required": true
        }
      },
      "description": "open an add-on's Dev Center documentation in your browser",
      "flags": {
        "show-url": {
          "description": "show URL, do not open browser",
          "name": "show-url",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:docs",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "docs.js"
      ]
    },
    "addons": {
      "aliases": [],
      "args": {},
      "description": "Lists your add-ons and attachments.\n\n  The default filter applied depends on whether you are in a Heroku app\n  directory. If so, the --app flag is implied. If not, the default of --all\n  is implied. Explicitly providing either flag overrides the default\n  behavior.\n  ",
      "examples": [
        "$ heroku addons --all",
        "$ heroku addons --app acme-inc-www"
      ],
      "flags": {
        "all": {
          "char": "A",
          "description": "show add-ons and attachments for all accessible apps",
          "name": "all",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "return add-ons in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "usage": "addons [--all|--app APP]",
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "index.js"
      ]
    },
    "addons:info": {
      "aliases": [],
      "args": {
        "addon": {
          "name": "addon",
          "required": true
        }
      },
      "description": "show detailed add-on resource and attachment information",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "usage": "addons:info ADDON",
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "info.js"
      ]
    },
    "addons:open": {
      "aliases": [],
      "args": {
        "addon": {
          "name": "addon",
          "required": true
        }
      },
      "description": "open an add-on's dashboard in your browser",
      "flags": {
        "show-url": {
          "description": "show URL, do not open browser",
          "name": "show-url",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:open",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "open.js"
      ]
    },
    "addons:plans": {
      "aliases": [],
      "args": {
        "service": {
          "name": "service",
          "required": true
        }
      },
      "description": "list all available plans for an add-on service",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:plans",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "plans.js"
      ]
    },
    "addons:rename": {
      "aliases": [],
      "args": {
        "addon_name": {
          "name": "addon_name",
          "required": true
        },
        "new_name": {
          "name": "new_name",
          "required": true
        }
      },
      "description": "rename an add-on",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:rename",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "rename.js"
      ]
    },
    "addons:services": {
      "aliases": [],
      "args": {},
      "description": "list all available add-on services",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:services",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "services.js"
      ]
    },
    "addons:upgrade": {
      "aliases": [
        "addons:downgrade"
      ],
      "args": {
        "addon": {
          "name": "addon",
          "required": true
        },
        "plan": {
          "name": "plan"
        }
      },
      "description": "change add-on plan.\n  See available plans with `heroku addons:plans SERVICE`.\n\n  Note that `heroku addons:upgrade` and `heroku addons:downgrade` are the same.  Either one can be used to change an add-on plan up or down.\n\n  https://devcenter.heroku.com/articles/managing-add-ons\n  ",
      "examples": [
        "Upgrade an add-on by service name:\n$ heroku addons:upgrade heroku-redis:premium-2\n\nUpgrade a specific add-on:\n$ heroku addons:upgrade swimming-briskly-123 heroku-redis:premium-2"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:upgrade",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "upgrade.js"
      ]
    },
    "addons:wait": {
      "aliases": [],
      "args": {
        "addon": {
          "name": "addon"
        }
      },
      "description": "show provisioning status of the add-ons on the app",
      "flags": {
        "wait-interval": {
          "description": "how frequently to poll in seconds",
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "addons:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "addons",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "addons",
        "wait.js"
      ]
    },
    "apps:create": {
      "aliases": [],
      "args": {
        "app": {
          "description": "name of app to create",
          "name": "app",
          "required": false
        }
      },
      "description": "creates a new app",
      "examples": [
        "$ heroku apps:create\nCreating app... done, stack is heroku-22\nhttps://floating-dragon-42.heroku.com/ | https://git.heroku.com/floating-dragon-42.git\n\n# or just\n$ heroku create\n\n# use a heroku.yml manifest file\n$ heroku apps:create --manifest\n\n# specify a buildpack\n$ heroku apps:create --buildpack https://github.com/some/buildpack.git\n\n# specify a name\n$ heroku apps:create example\n\n# create a staging app\n$ heroku apps:create example-staging --remote staging\n\n# create an app in the eu region\n$ heroku apps:create --region eu"
      ],
      "flags": {
        "app": {
          "hidden": true,
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "addons": {
          "description": "comma-delimited list of addons to install",
          "name": "addons",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "buildpack": {
          "char": "b",
          "description": "buildpack url to use for this app",
          "name": "buildpack",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "manifest": {
          "char": "m",
          "description": "use heroku.yml settings for this app",
          "hidden": true,
          "name": "manifest",
          "allowNo": false,
          "type": "boolean"
        },
        "no-remote": {
          "char": "n",
          "description": "do not create a git remote",
          "name": "no-remote",
          "allowNo": false,
          "type": "boolean"
        },
        "remote": {
          "char": "r",
          "description": "the git remote to create, default \"heroku\"",
          "name": "remote",
          "default": "heroku",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stack": {
          "char": "s",
          "description": "the stack to create the app on",
          "name": "stack",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "space": {
          "description": "the private space to create the app in",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "region": {
          "description": "specify region for the app to run in",
          "name": "region",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "internal-routing": {
          "description": "private space-only. create as an Internal Web App that is only routable in the local network.",
          "hidden": true,
          "name": "internal-routing",
          "allowNo": false,
          "type": "boolean"
        },
        "features": {
          "hidden": true,
          "name": "features",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "kernel": {
          "hidden": true,
          "name": "kernel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "locked": {
          "hidden": true,
          "name": "locked",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "create"
      ],
      "id": "apps:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "create.js"
      ]
    },
    "apps:destroy": {
      "aliases": [],
      "args": {
        "app": {
          "hidden": true,
          "name": "app"
        }
      },
      "description": "permanently destroy an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "destroy",
        "apps:delete"
      ],
      "id": "apps:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "help": "This will also destroy all add-ons on the app.",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "destroy.js"
      ]
    },
    "apps:errors": {
      "aliases": [],
      "args": {},
      "description": "view app errors",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "hours": {
          "description": "number of hours to look back (default 24)",
          "name": "hours",
          "default": "24",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "router": {
          "description": "show only router errors",
          "name": "router",
          "allowNo": false,
          "type": "boolean"
        },
        "dyno": {
          "description": "show only dyno errors",
          "name": "dyno",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:errors",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "errors.js"
      ]
    },
    "apps": {
      "aliases": [],
      "args": {},
      "description": "list your apps",
      "examples": [
        "$ heroku apps"
      ],
      "flags": {
        "all": {
          "char": "A",
          "description": "include apps in all teams",
          "name": "all",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "space": {
          "char": "s",
          "description": "filter by space",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "personal": {
          "char": "p",
          "description": "list apps in personal account when a default team is set",
          "name": "personal",
          "allowNo": false,
          "type": "boolean"
        },
        "internal-routing": {
          "char": "i",
          "description": "filter to Internal Web Apps",
          "hidden": true,
          "name": "internal-routing",
          "allowNo": false,
          "type": "boolean"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "list",
        "apps:list"
      ],
      "id": "apps",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "index.js"
      ]
    },
    "apps:info": {
      "aliases": [],
      "args": {
        "app": {
          "hidden": true,
          "name": "app"
        }
      },
      "description": "show detailed app information",
      "examples": [
        "$ heroku apps:info",
        "$ heroku apps:info --shell"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shell": {
          "char": "s",
          "description": "output more shell friendly key/value pairs",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        },
        "extended": {
          "char": "x",
          "hidden": true,
          "name": "extended",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "info"
      ],
      "id": "apps:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "help": "$ heroku apps:info\n=== example\nGit URL:   https://git.heroku.com/example.git\nRepo Size: 5M\n...\n\n$ heroku apps:info --shell\ngit_url=https://git.heroku.com/example.git\nrepo_size=5000000\n...",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "info.js"
      ]
    },
    "apps:join": {
      "aliases": [
        "join"
      ],
      "args": {},
      "description": "add yourself to a team app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:join",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "join.js"
      ]
    },
    "apps:leave": {
      "aliases": [
        "leave"
      ],
      "args": {},
      "description": "remove yourself from a team app",
      "examples": "heroku apps:leave -a APP",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:leave",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "example": "heroku apps:leave -a APP",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "leave.js"
      ]
    },
    "apps:lock": {
      "aliases": [
        "lock"
      ],
      "args": {},
      "description": "prevent team members from joining an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:lock",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "lock.js"
      ]
    },
    "apps:open": {
      "aliases": [],
      "args": {
        "path": {
          "name": "path",
          "required": false
        }
      },
      "description": "open the app in a web browser",
      "examples": [
        "$ heroku open -a myapp",
        "$ heroku open -a myapp /foo"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "open"
      ],
      "id": "apps:open",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "open.js"
      ]
    },
    "apps:rename": {
      "aliases": [],
      "args": {
        "newname": {
          "name": "newname",
          "required": true
        }
      },
      "description": "rename an app",
      "examples": [
        "$ heroku apps:rename --app oldname newname"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "rename"
      ],
      "id": "apps:rename",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "help": "This will locally update the git remote if it is set to the old app.",
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "rename.js"
      ]
    },
    "apps:transfer": {
      "aliases": [],
      "args": {
        "recipient": {
          "description": "user or team to transfer applications to",
          "name": "recipient",
          "required": true
        }
      },
      "description": "transfer applications to another user or team",
      "examples": [
        "$ heroku apps:transfer collaborator@example.com\nTransferring example to collaborator@example.com... done\n\n$ heroku apps:transfer acme-widgets\nTransferring example to acme-widgets... done\n\n$ heroku apps:transfer --bulk acme-widgets\n..."
      ],
      "flags": {
        "locked": {
          "char": "l",
          "description": "lock the app upon transfer",
          "name": "locked",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "bulk": {
          "description": "transfer applications in bulk",
          "name": "bulk",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:transfer",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "transfer.js"
      ]
    },
    "apps:unlock": {
      "aliases": [
        "unlock"
      ],
      "args": {},
      "description": "unlock an app so any team member can join",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:unlock",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "unlock.js"
      ]
    },
    "auth:login": {
      "aliases": [
        "login"
      ],
      "args": {},
      "description": "login with your Heroku credentials",
      "flags": {
        "browser": {
          "description": "browser to open SSO with (example: \"firefox\", \"safari\")",
          "name": "browser",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sso": {
          "char": "s",
          "description": "login for enterprise users under SSO",
          "hidden": true,
          "name": "sso",
          "allowNo": false,
          "type": "boolean"
        },
        "interactive": {
          "char": "i",
          "description": "login with username/password",
          "name": "interactive",
          "allowNo": false,
          "type": "boolean"
        },
        "expires-in": {
          "char": "e",
          "description": "duration of token in seconds (default 30 days)",
          "name": "expires-in",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:login",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "login.js"
      ]
    },
    "auth:logout": {
      "aliases": [
        "logout"
      ],
      "args": {},
      "description": "clears local login credentials and invalidates API session",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:logout",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "logout.js"
      ]
    },
    "auth:token": {
      "aliases": [],
      "args": {},
      "description": "outputs current CLI authentication token.\nBy default, the CLI auth token is only valid for 1 year. To generate a long-lived token, use heroku authorizations:create",
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:token",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "token.js"
      ]
    },
    "auth:whoami": {
      "aliases": [
        "whoami"
      ],
      "args": {},
      "description": "display the current logged in user",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:whoami",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "whoami.js"
      ]
    },
    "authorizations:create": {
      "aliases": [],
      "args": {},
      "description": "create a new OAuth authorization",
      "examples": [
        "$ heroku authorizations:create --description \"For use with Anvil\""
      ],
      "flags": {
        "description": {
          "char": "d",
          "description": "set a custom authorization",
          "name": "description",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "short": {
          "char": "S",
          "description": "only output token",
          "name": "short",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "scope": {
          "char": "s",
          "description": "set custom OAuth scopes",
          "name": "scope",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "expires-in": {
          "char": "e",
          "description": "set expiration in seconds (default no expiration)",
          "name": "expires-in",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "create.js"
      ]
    },
    "authorizations": {
      "aliases": [],
      "args": {},
      "description": "list OAuth authorizations",
      "examples": [
        "$ heroku authorizations"
      ],
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "index.js"
      ]
    },
    "authorizations:info": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "show an existing OAuth authorization",
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "info.js"
      ]
    },
    "authorizations:revoke": {
      "aliases": [
        "authorizations:revoke",
        "authorizations:destroy"
      ],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "revoke OAuth authorization",
      "examples": [
        "$ heroku authorizations:revoke 105a7bfa-34c3-476e-873a-b1ac3fdc12fb"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations:revoke",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "revoke.js"
      ]
    },
    "authorizations:rotate": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "updates an OAuth authorization token",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations:rotate",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "rotate.js"
      ]
    },
    "authorizations:update": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "updates an OAuth authorization",
      "flags": {
        "description": {
          "char": "d",
          "description": "set a custom authorization description",
          "name": "description",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "client-id": {
          "dependsOn": [
            "client-secret"
          ],
          "description": "identifier of OAuth client to set",
          "name": "client-id",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "client-secret": {
          "dependsOn": [
            "client-id"
          ],
          "description": "secret of OAuth client to set",
          "name": "client-secret",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "authorizations:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "authorizations",
        "update.js"
      ]
    },
    "autocomplete:create": {
      "aliases": [],
      "args": {},
      "description": "create autocomplete setup scripts and completion functions",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "autocomplete:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "autocomplete",
        "create.js"
      ]
    },
    "autocomplete:doctor": {
      "aliases": [],
      "args": {
        "shell": {
          "description": "shell type",
          "name": "shell",
          "required": false
        }
      },
      "description": "autocomplete diagnostic",
      "flags": {
        "verbose": {
          "description": "list completable commands",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "autocomplete:doctor",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "autocomplete",
        "doctor.js"
      ]
    },
    "autocomplete": {
      "aliases": [],
      "args": {
        "shell": {
          "description": "shell type",
          "name": "shell",
          "required": false
        }
      },
      "description": "display autocomplete installation instructions",
      "examples": [
        "$ heroku autocomplete",
        "$ heroku autocomplete bash",
        "$ heroku autocomplete zsh",
        "$ heroku autocomplete --refresh-cache"
      ],
      "flags": {
        "refresh-cache": {
          "char": "r",
          "description": "refresh cache only (ignores displaying instructions)",
          "name": "refresh-cache",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "autocomplete",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "autocomplete",
        "index.js"
      ]
    },
    "autocomplete:options": {
      "aliases": [],
      "args": {
        "completion": {
          "name": "completion"
        }
      },
      "description": "display arg or flag completion options (used internally by completion functions)",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "hidden": true,
          "name": "app",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "autocomplete:options",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "autocomplete",
        "options.js"
      ]
    },
    "autocomplete:script": {
      "aliases": [],
      "args": {
        "shell": {
          "description": "shell type",
          "name": "shell",
          "required": false
        }
      },
      "description": "display autocomplete setup script for shell",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "autocomplete:script",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "autocomplete",
        "script.js"
      ]
    },
    "buildpacks:add": {
      "aliases": [],
      "args": {
        "buildpack": {
          "description": "namespace/name of the buildpack",
          "name": "buildpack",
          "required": true
        }
      },
      "description": "add new app buildpack, inserting into list of buildpacks if necessary",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "index": {
          "char": "i",
          "description": "the 1-based index of the URL in the list of URLs",
          "name": "index",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "add.js"
      ]
    },
    "buildpacks:clear": {
      "aliases": [],
      "args": {},
      "description": "clear all buildpacks set on the app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:clear",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "clear.js"
      ]
    },
    "buildpacks": {
      "aliases": [],
      "args": {},
      "description": "display the buildpacks for an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "index.js"
      ]
    },
    "buildpacks:info": {
      "aliases": [],
      "args": {
        "buildpack": {
          "description": "namespace/name of the buildpack",
          "name": "buildpack",
          "required": true
        }
      },
      "description": "fetch info about a buildpack",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "info.js"
      ]
    },
    "buildpacks:remove": {
      "aliases": [],
      "args": {
        "buildpack": {
          "description": "namespace/name of the buildpack",
          "name": "buildpack"
        }
      },
      "description": "remove a buildpack set on the app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "index": {
          "char": "i",
          "description": "the 1-based index of the URL to remove from the list of URLs",
          "name": "index",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "remove.js"
      ]
    },
    "buildpacks:search": {
      "aliases": [],
      "args": {
        "term": {
          "description": "search term that searches across name, namespace, and description",
          "name": "term"
        }
      },
      "description": "search for buildpacks",
      "flags": {
        "namespace": {
          "description": "buildpack namespaces to filter on using a comma separated list",
          "name": "namespace",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "description": "buildpack names to filter on using a comma separated list ",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "description": {
          "description": "buildpack description to filter on",
          "name": "description",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:search",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "search.js"
      ]
    },
    "buildpacks:set": {
      "aliases": [],
      "args": {
        "buildpack": {
          "description": "namespace/name of the buildpack",
          "name": "buildpack",
          "required": true
        }
      },
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "index": {
          "char": "i",
          "description": "the 1-based index of the URL in the list of URLs",
          "name": "index",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "set.js"
      ]
    },
    "buildpacks:versions": {
      "aliases": [],
      "args": {
        "buildpack": {
          "description": "namespace/name of the buildpack",
          "name": "buildpack",
          "required": true
        }
      },
      "description": "list versions of a buildpack",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "buildpacks:versions",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "buildpacks",
        "versions.js"
      ]
    },
    "certs:add": {
      "aliases": [],
      "args": {
        "CRT": {
          "name": "CRT",
          "required": true
        },
        "KEY": {
          "name": "KEY",
          "required": true
        }
      },
      "description": "Add an SSL certificate to an app.\n\n  Note: certificates with PEM encoding are also valid.\n  ",
      "examples": [
        "$ heroku certs:add example.com.crt example.com.key\n    If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n    https://help.salesforce.com/s/articleView?id=000333504&type=1"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "add.js"
      ]
    },
    "certs:generate": {
      "aliases": [],
      "args": {
        "domain": {
          "name": "domain",
          "required": true
        }
      },
      "description": "generate a key and a CSR or self-signed certificate",
      "flags": {
        "selfsigned": {
          "description": "generate a self-signed certificate instead of a CSR",
          "name": "selfsigned",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "keysize": {
          "description": "RSA key size in bits (default: 2048)",
          "name": "keysize",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "owner": {
          "description": "name of organization certificate belongs to",
          "name": "owner",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "country": {
          "description": "country of owner, as a two-letter ISO country code",
          "name": "country",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "area": {
          "description": "sub-country area (state, province, etc.) of owner",
          "name": "area",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "city": {
          "description": "city of owner",
          "name": "city",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "subject": {
          "description": "specify entire certificate subject",
          "name": "subject",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "now": {
          "description": "do not prompt for any owner information",
          "name": "now",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:generate",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "help": "Generate a key and certificate signing request (or self-signed certificate)\nfor an app. Prompts for information to put in the certificate unless --now\nis used, or at least one of the --subject, --owner, --country, --area, or\n--city options is specified.",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "generate.js"
      ]
    },
    "certs": {
      "aliases": [],
      "args": {},
      "description": "list SSL certificates for an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "index.js"
      ]
    },
    "certs:info": {
      "aliases": [],
      "args": {},
      "description": "show certificate information for an SSL certificate",
      "flags": {
        "name": {
          "description": "name to check info on",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "endpoint": {
          "description": "endpoint to check info on",
          "name": "endpoint",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "show-domains": {
          "description": "show associated domains",
          "name": "show-domains",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "info.js"
      ]
    },
    "certs:remove": {
      "aliases": [],
      "args": {},
      "description": "remove an SSL certificate from an app",
      "flags": {
        "confirm": {
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "description": "name to remove",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "endpoint": {
          "description": "endpoint to remove",
          "name": "endpoint",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "remove.js"
      ]
    },
    "certs:update": {
      "aliases": [],
      "args": {
        "CRT": {
          "name": "CRT",
          "required": true
        },
        "KEY": {
          "name": "KEY",
          "required": true
        }
      },
      "description": "update an SSL certificate on an app\nNote: certificates with PEM encoding are also valid\n",
      "examples": [
        "$ heroku certs:update example.com.crt example.com.key\n\n    If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n    https://help.salesforce.com/s/articleView?id=000333504&type=1\n"
      ],
      "flags": {
        "confirm": {
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "name": {
          "description": "name to update",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "endpoint": {
          "description": "endpoint to update",
          "name": "endpoint",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "update.js"
      ]
    },
    "ci:debug": {
      "aliases": [],
      "args": {},
      "description": "opens an interactive test debugging session with the contents of the current directory",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-cache": {
          "description": "start test run with an empty cache",
          "name": "no-cache",
          "allowNo": false,
          "type": "boolean"
        },
        "no-setup": {
          "description": "start test dyno without running test-setup",
          "name": "no-setup",
          "allowNo": false,
          "type": "boolean"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:debug",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "help": "Example:\n\n    $ heroku ci:debug --pipeline PIPELINE\n    Preparing source... done\n    Creating test run... done\n    Running setup and attaching to test dyno...\n\n~ $\n",
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "debug.js"
      ]
    },
    "ci": {
      "aliases": [],
      "args": {},
      "description": "display the most recent CI runs for the given pipeline",
      "examples": [
        "$ heroku ci --app murmuring-headland-14719\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app name",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "watch": {
          "description": "keep running and watch for new and update tests",
          "name": "watch",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "index.js"
      ]
    },
    "ci:info": {
      "aliases": [],
      "args": {
        "test-run": {
          "name": "test-run",
          "required": true
        }
      },
      "description": "show the status of a specific test run",
      "examples": [
        "$ heroku ci:info 1288 --app murmuring-headland-14719\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app name",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "node": {
          "description": "the node number to show its setup and output",
          "name": "node",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "info.js"
      ]
    },
    "ci:last": {
      "aliases": [],
      "args": {},
      "description": "looks for the most recent run and returns the output of that run",
      "examples": [
        "$ heroku ci:last --pipeline=my-pipeline --node 100\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app name",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "node": {
          "description": "the node number to show its setup and output",
          "name": "node",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:last",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "last.js"
      ]
    },
    "ci:migrate-manifest": {
      "aliases": [],
      "args": {},
      "description": "app-ci.json is deprecated. Run this command to migrate to app.json with an environments key.",
      "examples": [
        "$ heroku ci:migrate-manifest"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:migrate-manifest",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "migrate-manifest.js"
      ]
    },
    "ci:open": {
      "aliases": [],
      "args": {},
      "description": "open the Dashboard version of Heroku CI",
      "examples": [
        "$ heroku ci:open --app murmuring-headland-14719"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:open",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "open.js"
      ]
    },
    "ci:rerun": {
      "aliases": [],
      "args": {
        "number": {
          "name": "number",
          "required": false
        }
      },
      "description": "rerun tests against current directory",
      "examples": [
        "$ heroku ci:rerun 985 --app murmuring-headland-14719\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app name",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:rerun",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "rerun.js"
      ]
    },
    "ci:run": {
      "aliases": [],
      "args": {},
      "description": "run tests against current directory",
      "examples": [
        "$ heroku ci:run --app murmuring-headland-14719\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app name",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:run",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "run.js"
      ]
    },
    "clients:create": {
      "aliases": [],
      "args": {
        "name": {
          "name": "name",
          "required": true
        },
        "redirect_uri": {
          "name": "redirect_uri",
          "required": true
        }
      },
      "description": "create a new OAuth client",
      "examples": [
        "$ heroku clients:create \"Amazing\" https://amazing-client.herokuapp.com/auth/heroku/callback"
      ],
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "shell": {
          "char": "s",
          "description": "output in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "create.js"
      ]
    },
    "clients:destroy": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "delete client by ID",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "destroy.js"
      ]
    },
    "clients": {
      "aliases": [],
      "args": {},
      "description": "list your OAuth clients",
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "index.js"
      ]
    },
    "clients:info": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "show details of an oauth client",
      "examples": [
        "$ heroku clients:info 36120128-fee7-455e-8b7f-807aee130946"
      ],
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "shell": {
          "char": "s",
          "description": "output in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "info.js"
      ]
    },
    "clients:rotate": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "rotate OAuth client secret",
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "shell": {
          "char": "s",
          "description": "output in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients:rotate",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "rotate.js"
      ]
    },
    "clients:update": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "update OAuth client",
      "examples": [
        "$ heroku clients:update 3e304bda-d376-4278-bdea-6d6c08aa1359 --url https://amazing-client.herokuapp.com/auth/heroku/callback"
      ],
      "flags": {
        "name": {
          "char": "n",
          "description": "change the client name",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "url": {
          "description": "change the client redirect URL",
          "name": "url",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "clients:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "clients",
        "update.js"
      ]
    },
    "config:edit": {
      "aliases": [],
      "args": {
        "key": {
          "description": "edit a single key",
          "name": "key"
        }
      },
      "description": "interactively edit config vars\nThis command opens the app config in a text editor set by $VISUAL or $EDITOR.\nAny variables added/removed/changed will be updated on the app after saving and closing the file.",
      "examples": [
        "# edit with vim\n$ EDITOR=\"vim\" heroku config:edit",
        "# edit with emacs\n$ EDITOR=\"emacs\" heroku config:edit",
        "# edit with pico\n$ EDITOR=\"pico\" heroku config:edit",
        "# edit with atom editor\n$ VISUAL=\"atom --wait\" heroku config:edit"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "config:edit",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "edit.js"
      ]
    },
    "config:get": {
      "aliases": [],
      "args": {
        "KEY": {
          "name": "KEY",
          "required": true
        }
      },
      "description": "display a single config value for an app",
      "examples": "$ heroku config:get RAILS_ENV\nproduction",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shell": {
          "char": "s",
          "description": "output config vars in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "config:get",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "config:get KEY...",
      "example": "$ heroku config:get RAILS_ENV\nproduction",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "get.js"
      ]
    },
    "config": {
      "aliases": [],
      "args": {},
      "description": "display the config vars for an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shell": {
          "char": "s",
          "description": "output config vars in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "char": "j",
          "description": "output config vars in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "config",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "index.js"
      ]
    },
    "config:set": {
      "aliases": [],
      "args": {},
      "description": "set one or more config vars",
      "examples": [
        "$ heroku config:set RAILS_ENV=staging\nSetting config vars and restarting example... done, v10\nRAILS_ENV: staging\n\n$ heroku config:set RAILS_ENV=staging RACK_ENV=staging\nSetting config vars and restarting example... done, v11\nRAILS_ENV: staging\nRACK_ENV:  staging"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "config:add"
      ],
      "id": "config:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "set.js"
      ]
    },
    "config:unset": {
      "aliases": [
        "config:remove"
      ],
      "args": {},
      "description": "unset one or more config vars",
      "examples": [
        "$ heroku config:unset RAILS_ENV\nUnsetting RAILS_ENV and restarting example... done, v10",
        "$ heroku config:unset RAILS_ENV RACK_ENV\nUnsetting RAILS_ENV, RACK_ENV and restarting example... done, v10"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "config:unset",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "config",
        "unset.js"
      ]
    },
    "container": {
      "aliases": [],
      "args": {},
      "description": "Use containers to build and deploy Heroku apps",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "container",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "index.js"
      ]
    },
    "container:login": {
      "aliases": [],
      "args": {},
      "description": "log in to Heroku Container Registry",
      "flags": {
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:login",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "container",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "login.js"
      ]
    },
    "container:logout": {
      "aliases": [],
      "args": {},
      "description": "log out from Heroku Container Registry",
      "flags": {
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:logout",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "container",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "logout.js"
      ]
    },
    "container:pull": {
      "aliases": [],
      "args": {},
      "description": "pulls an image from an app's process type",
      "examples": "\n  $ heroku container:pull web        # Pulls the web image from the app\n  $ heroku container:pull web worker # Pulls both the web and worker images from the app\n  $ heroku container:pull web:latest # Pulls the latest tag from the web image",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:pull",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "container:pull -a APP [-v] PROCESS_TYPE...",
      "topic": "container",
      "example": "\n  $ heroku container:pull web        # Pulls the web image from the app\n  $ heroku container:pull web worker # Pulls both the web and worker images from the app\n  $ heroku container:pull web:latest # Pulls the latest tag from the web image",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "pull.js"
      ]
    },
    "container:push": {
      "aliases": [],
      "args": {},
      "description": "builds, then pushes Docker images to deploy your Heroku app",
      "examples": [
        "$ heroku container:push web                          # Pushes Dockerfile to web process type",
        "$ heroku container:push worker                       # Pushes Dockerfile to worker process type",
        "$ heroku container:push web worker --recursive       # Pushes Dockerfile.web and Dockerfile.worker",
        "$ heroku container:push --recursive                  # Pushes Dockerfile.*",
        "$ heroku container:push web --arg ENV=live,HTTPS=on  # Build-time variables",
        "$ heroku container:push --recursive --context-path . # Pushes Dockerfile.* using current dir as build context"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "recursive": {
          "char": "R",
          "description": "pushes Dockerfile.<process> found in current and subdirectories",
          "name": "recursive",
          "allowNo": false,
          "type": "boolean"
        },
        "arg": {
          "description": "set build-time variables",
          "name": "arg",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "context-path": {
          "description": "path to use as build context (defaults to Dockerfile dir)",
          "name": "context-path",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:push",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "container",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "push.js"
      ]
    },
    "container:release": {
      "aliases": [],
      "args": {},
      "description": "Releases previously pushed Docker images to your Heroku app",
      "examples": "\n  heroku container:release web        # Releases the previously pushed web process type\n  heroku container:release web worker # Releases the previously pushed web and worker process types",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:release",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "container:release",
      "topic": "container",
      "example": "\n  heroku container:release web        # Releases the previously pushed web process type\n  heroku container:release web worker # Releases the previously pushed web and worker process types",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "release.js"
      ]
    },
    "container:rm": {
      "aliases": [],
      "args": {},
      "description": "remove the process type from your app",
      "examples": "\n  heroku container:rm web        # Destroys the web container\n  heroku container:rm web worker # Destroys the web and worker containers",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:rm",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "container:rm -a APP [-v] PROCESS_TYPE...",
      "topic": "container",
      "example": "\n  heroku container:rm web        # Destroys the web container\n  heroku container:rm web worker # Destroys the web and worker containers",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "rm.js"
      ]
    },
    "container:run": {
      "aliases": [],
      "args": {},
      "description": "builds, then runs the docker image locally",
      "examples": "\n  $ heroku container:pull web        # Pulls the web image from the app\n  $ heroku container:pull web worker # Pulls both the web and worker images from the app\n  $ heroku container:pull web:latest # Pulls the latest tag from the web image",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "port": {
          "char": "p",
          "description": "port the app will run on",
          "name": "port",
          "default": 5000,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "container:run",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "container:run -a APP [-v] PROCESS_TYPE...",
      "topic": "container",
      "example": "\n  $ heroku container:pull web        # Pulls the web image from the app\n  $ heroku container:pull web worker # Pulls both the web and worker images from the app\n  $ heroku container:pull web:latest # Pulls the latest tag from the web image",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "container",
        "run.js"
      ]
    },
    "domains:add": {
      "aliases": [],
      "args": {
        "hostname": {
          "name": "hostname",
          "required": true
        }
      },
      "description": "add a domain to an app",
      "examples": [
        "heroku domains:add www.example.com"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "cert": {
          "char": "c",
          "description": "the name of the SSL cert you want to use for this domain",
          "name": "cert",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "wait": {
          "name": "wait",
          "allowNo": false,
          "type": "boolean"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "add.js"
      ]
    },
    "domains:clear": {
      "aliases": [],
      "args": {},
      "description": "remove all domains from an app",
      "examples": [
        "heroku domains:clear"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:clear",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "clear.js"
      ]
    },
    "domains": {
      "aliases": [],
      "args": {},
      "description": "list domains for an app",
      "examples": [
        "$ heroku domains\n=== example Heroku Domain\nexample-xxxxxxxxxxxx.herokuapp.com\n\n=== example Custom Domains\nDomain Name      DNS Record Type  DNS Target\nwww.example.com  CNAME            www.example.herokudns.com\n",
        "$ heroku domains --filter 'Domain Name=www.example.com'"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "columns": {
          "description": "only show provided columns (comma-separated)",
          "exclusive": [
            "extended"
          ],
          "name": "columns",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "sort": {
          "description": "property to sort by (prepend '-' for descending)",
          "name": "sort",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "filter": {
          "description": "filter property by partial string matching, ex: name=foo",
          "name": "filter",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "csv": {
          "description": "output is csv format [alias: --output=csv]",
          "exclusive": [
            "no-truncate"
          ],
          "name": "csv",
          "allowNo": false,
          "type": "boolean"
        },
        "output": {
          "description": "output in a more machine friendly format",
          "exclusive": [
            "no-truncate",
            "csv"
          ],
          "name": "output",
          "hasDynamicHelp": false,
          "multiple": false,
          "options": [
            "csv",
            "json",
            "yaml"
          ],
          "type": "option"
        },
        "extended": {
          "char": "x",
          "description": "show extra columns",
          "exclusive": [
            "columns"
          ],
          "name": "extended",
          "allowNo": false,
          "type": "boolean"
        },
        "no-header": {
          "description": "hide table header from output",
          "exclusive": [
            "csv"
          ],
          "name": "no-header",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "index.js"
      ]
    },
    "domains:info": {
      "aliases": [],
      "args": {
        "hostname": {
          "name": "hostname",
          "required": true
        }
      },
      "description": "show detailed information for a domain on an app",
      "examples": [
        "$ heroku domains:info www.example.com"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "info.js"
      ]
    },
    "domains:remove": {
      "aliases": [],
      "args": {
        "hostname": {
          "name": "hostname",
          "required": true
        }
      },
      "description": "remove a domain from an app",
      "examples": [
        "heroku domains:remove www.example.com"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "remove.js"
      ]
    },
    "domains:update": {
      "aliases": [],
      "args": {
        "hostname": {
          "name": "hostname",
          "required": true
        }
      },
      "description": "update a domain to use a different SSL certificate on an app",
      "examples": [
        "heroku domains:update www.example.com --cert mycert"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "cert": {
          "description": "the name or id of the certificate you want to use for this domain",
          "name": "cert",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "update.js"
      ]
    },
    "domains:wait": {
      "aliases": [],
      "args": {
        "hostname": {
          "name": "hostname"
        }
      },
      "description": "wait for domain to be active for an app",
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "domains:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "domains",
        "wait.js"
      ]
    },
    "drains:add": {
      "aliases": [],
      "args": {
        "url": {
          "name": "url",
          "required": true
        }
      },
      "description": "adds a log drain to an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "drains:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "drains",
        "add.js"
      ]
    },
    "drains": {
      "aliases": [],
      "args": {},
      "description": "display the log drains of an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "extended": {
          "char": "x",
          "hidden": true,
          "name": "extended",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "drains",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "drains",
        "index.js"
      ]
    },
    "drains:remove": {
      "aliases": [],
      "args": {
        "url": {
          "name": "url",
          "required": true
        }
      },
      "description": "removes a log drain from an app",
      "examples": "drains:remove [URL|TOKEN]",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "drains:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": "drains:remove [URL|TOKEN]",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "drains",
        "remove.js"
      ]
    },
    "features:disable": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "disables an app feature",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "features:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "features",
        "disable.js"
      ]
    },
    "features:enable": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "enables an app feature",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "features:enable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "features",
        "enable.js"
      ]
    },
    "features": {
      "aliases": [],
      "args": {},
      "description": "list available app features",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "features",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "features",
        "index.js"
      ]
    },
    "features:info": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "display information about a feature",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "features:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "features",
        "info.js"
      ]
    },
    "git:clone": {
      "aliases": [],
      "args": {
        "DIRECTORY": {
          "description": "where to clone the app",
          "name": "DIRECTORY"
        }
      },
      "description": "clones a heroku app to your local machine at DIRECTORY (defaults to app name)",
      "examples": "$ heroku git:clone -a example\nCloning into 'example'...\nremote: Counting objects: 42, done.\n...",
      "flags": {
        "app": {
          "char": "a",
          "description": "the Heroku app to use",
          "env": "HEROKU_APP",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "the git remote to create, default \"heroku\"",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "git:clone",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": "$ heroku git:clone -a example\nCloning into 'example'...\nremote: Counting objects: 42, done.\n...",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "git",
        "clone.js"
      ]
    },
    "git:credentials": {
      "aliases": [],
      "args": {
        "command": {
          "name": "command",
          "required": true
        }
      },
      "description": "internal command for git-credentials",
      "flags": {},
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "git:credentials",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "git",
        "credentials.js"
      ]
    },
    "git:remote": {
      "aliases": [],
      "args": {},
      "description": "adds a git remote to an app repo\nextra arguments will be passed to git remote add\n",
      "examples": "# set git remote heroku to https://git.heroku.com/example.git\n    $ heroku git:remote -a example\n\n    # set git remote heroku-staging to https://git.heroku.com/example.git\n    $ heroku git:remote --remote heroku-staging -a example",
      "flags": {
        "app": {
          "char": "a",
          "description": "the Heroku app to use",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "the git remote to create",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "git:remote",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "example": "# set git remote heroku to https://git.heroku.com/example.git\n    $ heroku git:remote -a example\n\n    # set git remote heroku-staging to https://git.heroku.com/example.git\n    $ heroku git:remote --remote heroku-staging -a example",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "git",
        "remote.js"
      ]
    },
    "keys:add": {
      "aliases": [],
      "args": {
        "key": {
          "name": "key"
        }
      },
      "description": "add an SSH key for a user",
      "examples": "$ heroku keys:add\nCould not find an existing public key.\nWould you like to generate one? [Yn] y\nGenerating new SSH public key.\nUploading SSH public key /.ssh/id_rsa.pub... done\n\n$ heroku keys:add /my/key.pub\nUploading SSH public key /my/key.pub... done",
      "flags": {
        "quiet": {
          "hidden": true,
          "name": "quiet",
          "allowNo": false,
          "type": "boolean"
        },
        "yes": {
          "char": "y",
          "description": "automatically answer yes for all prompts",
          "name": "yes",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "keys:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "help": "if no KEY is specified, will try to find ~/.ssh/id_rsa.pub",
      "example": "$ heroku keys:add\nCould not find an existing public key.\nWould you like to generate one? [Yn] y\nGenerating new SSH public key.\nUploading SSH public key /.ssh/id_rsa.pub... done\n\n$ heroku keys:add /my/key.pub\nUploading SSH public key /my/key.pub... done",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "keys",
        "add.js"
      ]
    },
    "keys:clear": {
      "aliases": [],
      "args": {},
      "description": "remove all SSH keys for current user",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "keys:clear",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "keys",
        "clear.js"
      ]
    },
    "keys": {
      "aliases": [],
      "args": {},
      "description": "display your SSH keys",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "long": {
          "char": "l",
          "description": "display full SSH keys",
          "name": "long",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "keys",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "keys",
        "index.js"
      ]
    },
    "keys:remove": {
      "aliases": [],
      "args": {
        "key": {
          "name": "key",
          "required": true
        }
      },
      "description": "remove an SSH key from the user",
      "examples": "$ heroku keys:remove email@example.com\nRemoving email@example.com SSH key... done",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "keys:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": "$ heroku keys:remove email@example.com\nRemoving email@example.com SSH key... done",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "keys",
        "remove.js"
      ]
    },
    "labs:disable": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "disables an experimental feature",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "name": "confirm",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "labs:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "labs",
        "disable.js"
      ]
    },
    "labs:enable": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "enables an experimental feature",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "labs:enable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "labs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "labs",
        "enable.js"
      ]
    },
    "labs": {
      "aliases": [],
      "args": {},
      "description": "list experimental features",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "display as json",
          "name": "json",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "labs",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "labs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "labs",
        "index.js"
      ]
    },
    "labs:info": {
      "aliases": [],
      "args": {
        "feature": {
          "name": "feature",
          "required": true
        }
      },
      "description": "show feature info",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "display as json",
          "name": "json",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "labs:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "labs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "labs",
        "info.js"
      ]
    },
    "local": {
      "aliases": [
        "local:start"
      ],
      "args": {
        "processname": {
          "name": "processname",
          "required": false
        }
      },
      "description": "run heroku app locally\nStart the application specified by a Procfile (defaults to ./Procfile)",
      "examples": [
        "$ heroku local\n$ heroku local web\n$ heroku local web=2\n$ heroku local web=1,worker=2"
      ],
      "flags": {
        "procfile": {
          "char": "f",
          "description": "use a different Procfile",
          "name": "procfile",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "env": {
          "char": "e",
          "description": "location of env file (defaults to .env)",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "port": {
          "char": "p",
          "description": "port to listen on",
          "name": "port",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "restart": {
          "char": "r",
          "description": "restart process if it dies",
          "hidden": true,
          "name": "restart",
          "allowNo": false,
          "type": "boolean"
        },
        "concurrency": {
          "char": "c",
          "description": "number of processes to start",
          "hidden": true,
          "name": "concurrency",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "local",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "local",
        "index.js"
      ]
    },
    "local:run": {
      "aliases": [],
      "args": {},
      "description": "run a one-off command",
      "examples": [
        "$ heroku local:run bin/migrate"
      ],
      "flags": {
        "env": {
          "char": "e",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "port": {
          "char": "p",
          "name": "port",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "local:run",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "local",
        "run.js"
      ]
    },
    "local:version": {
      "aliases": [],
      "args": {},
      "description": "display node-foreman version",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "local:version",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "local",
        "version.js"
      ]
    },
    "maintenance": {
      "aliases": [],
      "args": {},
      "description": "display the current maintenance status of app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "maintenance",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "maintenance",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "maintenance",
        "index.js"
      ]
    },
    "maintenance:off": {
      "aliases": [],
      "args": {},
      "description": "take the app out of maintenance mode",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "maintenance:off",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "maintenance",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "maintenance",
        "off.js"
      ]
    },
    "maintenance:on": {
      "aliases": [],
      "args": {},
      "description": "put the app into maintenance mode",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "maintenance:on",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "maintenance",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "maintenance",
        "on.js"
      ]
    },
    "members:add": {
      "aliases": [],
      "args": {
        "email": {
          "name": "email",
          "required": true
        }
      },
      "description": "adds a user to a team",
      "flags": {
        "role": {
          "char": "r",
          "description": "member role (admin, collaborator, member, owner)",
          "name": "role",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "members:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "members",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "members",
        "add.js"
      ]
    },
    "members": {
      "aliases": [],
      "args": {},
      "description": "list members of a team",
      "flags": {
        "role": {
          "char": "r",
          "description": "filter by role",
          "name": "role",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pending": {
          "description": "filter by pending team invitations",
          "name": "pending",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "members",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "members",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "members",
        "index.js"
      ]
    },
    "members:remove": {
      "aliases": [],
      "args": {},
      "description": "removes a user from a team",
      "flags": {
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "members:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "members",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "members",
        "remove.js"
      ]
    },
    "members:set": {
      "aliases": [],
      "args": {},
      "description": "sets a members role in a team",
      "flags": {
        "role": {
          "char": "r",
          "description": "member role (admin, collaborator, member, owner)",
          "name": "role",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "members:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "members",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "members",
        "set.js"
      ]
    },
    "notifications": {
      "aliases": [],
      "args": {},
      "description": "display notifications",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "all": {
          "description": "view all notifications (not just the ones for the current app)",
          "name": "all",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "read": {
          "description": "show notifications already read",
          "name": "read",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "notifications",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "notifications",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "notifications",
        "index.js"
      ]
    },
    "orgs": {
      "aliases": [],
      "args": {},
      "description": "list the teams that you are a member of",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "enterprise": {
          "description": "filter by enterprise teams",
          "name": "enterprise",
          "allowNo": false,
          "type": "boolean"
        },
        "teams": {
          "description": "filter by teams",
          "hidden": true,
          "name": "teams",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "orgs",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "orgs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "orgs",
        "index.js"
      ]
    },
    "orgs:open": {
      "aliases": [],
      "args": {},
      "description": "open the team interface in a browser window",
      "flags": {
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "orgs:open",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "orgs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "orgs",
        "open.js"
      ]
    },
    "pg:bloat": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show table and index bloat in your database ordered by most wasteful",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:bloat",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "bloat.js"
      ]
    },
    "pg:blocking": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "display queries holding locks other queries are waiting to be released",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:blocking",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "blocking.js"
      ]
    },
    "pg:copy": {
      "aliases": [],
      "args": {
        "source": {
          "name": "source",
          "required": true
        },
        "target": {
          "name": "target",
          "required": true
        }
      },
      "description": "copy all data from source db to target",
      "flags": {
        "wait-interval": {
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "confirm": {
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:copy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "help": "at least one of the databases must be a Heroku PostgreSQL DB",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "copy.js"
      ]
    },
    "pg:credentials": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show information on credentials in the database",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials.js"
      ]
    },
    "pg:diagnose": {
      "aliases": [],
      "args": {
        "DATABASE|REPORT_ID": {
          "name": "DATABASE|REPORT_ID"
        }
      },
      "description": "run or view diagnostics report\ndefaults to DATABASE_URL database if no DATABASE is specified\nif REPORT_ID is specified instead, a previous report is displayed\n\n",
      "flags": {
        "json": {
          "description": "format output as JSON",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:diagnose",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "diagnose.js"
      ]
    },
    "pg:info": {
      "aliases": [
        "pg"
      ],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show database information",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "info.js"
      ]
    },
    "pg:kill": {
      "aliases": [],
      "args": {
        "pid": {
          "name": "pid",
          "required": true
        },
        "database": {
          "name": "database"
        }
      },
      "description": "kill a query",
      "flags": {
        "force": {
          "char": "f",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:kill",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "kill.js"
      ]
    },
    "pg:killall": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "terminates all connections for all credentials",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:killall",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "killall.js"
      ]
    },
    "pg:locks": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "display queries with active locks",
      "flags": {
        "truncate": {
          "char": "t",
          "description": "truncates queries to 40 characters",
          "name": "truncate",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:locks",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "locks.js"
      ]
    },
    "pg:outliers": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show 10 queries that have longest execution time in aggregate",
      "flags": {
        "reset": {
          "description": "resets statistics gathered by pg_stat_statements",
          "name": "reset",
          "allowNo": false,
          "type": "boolean"
        },
        "truncate": {
          "char": "t",
          "description": "truncate queries to 40 characters",
          "name": "truncate",
          "allowNo": false,
          "type": "boolean"
        },
        "num": {
          "char": "n",
          "description": "the number of queries to display (default: 10)",
          "name": "num",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:outliers",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "outliers.js"
      ]
    },
    "pg:promote": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": true
        }
      },
      "description": "sets DATABASE as your DATABASE_URL",
      "flags": {
        "force": {
          "char": "f",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:promote",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "promote.js"
      ]
    },
    "pg:ps": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "view active queries with execution time",
      "flags": {
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:ps",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "ps.js"
      ]
    },
    "pg:psql": {
      "aliases": [
        "psql"
      ],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "open a psql shell to the database",
      "flags": {
        "command": {
          "char": "c",
          "description": "SQL command to run",
          "name": "command",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "file": {
          "char": "f",
          "description": "SQL file to run",
          "name": "file",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "credential": {
          "description": "credential to use",
          "name": "credential",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:psql",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "psql.js"
      ]
    },
    "pg:pull": {
      "aliases": [],
      "args": {
        "source": {
          "name": "source",
          "required": true
        },
        "target": {
          "name": "target",
          "required": true
        }
      },
      "description": "pull Heroku database into local or remote database\nPull from SOURCE into TARGET.\n\nTARGET must be one of:\n* a database name (i.e. on a local PostgreSQL server)  => TARGET must not exist and will be created\n* a fully qualified URL to a local PostgreSQL server   => TARGET must not exist and will be created\n* a fully qualified URL to a remote PostgreSQL server  => TARGET must exist and be empty\n\nTo delete a local database run dropdb TARGET.\nTo create an empty remote database, run createdb with connection command-line options (run createdb --help for details).\n",
      "examples": [
        "# pull Heroku DB named postgresql-swimmingly-100 into local DB mylocaldb that must not exist\n$ heroku pg:pull postgresql-swimmingly-100 mylocaldb --app sushi\n",
        "# pull Heroku DB named postgresql-swimmingly-100 into empty remote DB at postgres://myhost/mydb\n$ heroku pg:pull postgresql-swimmingly-100 postgres://myhost/mydb --app sushi\n"
      ],
      "flags": {
        "exclude-table-data": {
          "description": "tables for which data should be excluded (use ';' to split multiple names)",
          "name": "exclude-table-data",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:pull",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "pull.js"
      ]
    },
    "pg:push": {
      "aliases": [],
      "args": {
        "source": {
          "name": "source",
          "required": true
        },
        "target": {
          "name": "target",
          "required": true
        }
      },
      "description": "push local or remote into Heroku database\nPush from SOURCE into TARGET. TARGET must be empty.\n\nTo empty a Heroku database for push run heroku pg:reset\n\nSOURCE must be either the name of a database existing on your localhost or the\nfully qualified URL of a remote database.\n",
      "examples": [
        "# push mylocaldb into a Heroku DB named postgresql-swimmingly-100\n$ heroku pg:push mylocaldb postgresql-swimmingly-100 --app sushi\n",
        "# push remote DB at postgres://myhost/mydb into a Heroku DB named postgresql-swimmingly-100\n$ heroku pg:push postgres://myhost/mydb postgresql-swimmingly-100 --app sushi\n"
      ],
      "flags": {
        "exclude-table-data": {
          "description": "tables for which data should be excluded (use ';' to split multiple names)",
          "name": "exclude-table-data",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:push",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "push.js"
      ]
    },
    "pg:reset": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "delete all data in DATABASE",
      "flags": {
        "extensions": {
          "char": "e",
          "description": "comma-separated list of extensions to pre-install in the public schema",
          "name": "extensions",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:reset",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "reset.js"
      ]
    },
    "pg:unfollow": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": true
        }
      },
      "description": "stop a replica from following and make it a writeable database",
      "flags": {
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:unfollow",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "unfollow.js"
      ]
    },
    "pg:upgrade": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "For an Essential-* plan, this command upgrades the database's PostgreSQL version. For a Standard-tier and higher plan, this command unfollows the leader database before upgrading the PostgreSQL version.\nTo upgrade to another PostgreSQL version, use pg:copy instead\n",
      "flags": {
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "char": "v",
          "description": "PostgreSQL version to upgrade to",
          "name": "version",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:upgrade",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "upgrade.js"
      ]
    },
    "pg:vacuum-stats": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show dead rows and whether an automatic vacuum is expected to be triggered",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:vacuum-stats",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "vacuum-stats.js"
      ]
    },
    "pg:wait": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "blocks until database is available",
      "flags": {
        "wait-interval": {
          "description": "how frequently to poll in seconds (to avoid rate limiting)",
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-notify": {
          "description": "do not show OS notification",
          "name": "no-notify",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "wait.js"
      ]
    },
    "pipelines:add": {
      "aliases": [],
      "args": {
        "pipeline": {
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true
        }
      },
      "description": "add this app to a pipeline\nThe app and pipeline names must be specified.\nThe stage of the app will be guessed based on its name if not specified.",
      "examples": [
        "$ heroku pipelines:add my-pipeline -a my-app -s production"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stage": {
          "char": "s",
          "description": "stage of first app in pipeline",
          "name": "stage",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "add.js"
      ]
    },
    "pipelines:connect": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name of pipeline",
          "name": "name",
          "required": true
        }
      },
      "description": "connect a GitHub repo to an existing pipeline",
      "examples": [
        "$ heroku pipelines:connect my-pipeline -r githuborg/reponame"
      ],
      "flags": {
        "repo": {
          "char": "r",
          "description": "the GitHub repository to connect to",
          "name": "repo",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:connect",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "connect.js"
      ]
    },
    "pipelines:create": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name of pipeline (defaults to basename of the app)",
          "name": "name",
          "required": false
        }
      },
      "description": "create a new pipeline\n  An existing app must be specified as the first app in the pipeline.\n  The pipeline name will be inferred from the app name if not specified.\n  The stage of the app will be guessed based on its name if not specified.\n  The pipeline owner will be the user creating the pipeline if not specified with -t for teams or -o for orgs.",
      "examples": [
        "$ heroku pipelines:create -a my-app-staging",
        "$ heroku pipelines:create my-pipeline -a my-app-staging"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stage": {
          "char": "s",
          "description": "stage of first app in pipeline",
          "name": "stage",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "team": {
          "char": "t",
          "description": "the team which will own the apps",
          "name": "team",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "create.js"
      ]
    },
    "pipelines:destroy": {
      "aliases": [],
      "args": {
        "pipeline": {
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true
        }
      },
      "description": "destroy a pipeline",
      "examples": [
        "$ heroku pipelines:destroy my-pipeline"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "destroy.js"
      ]
    },
    "pipelines:diff": {
      "aliases": [],
      "args": {},
      "description": "compares the latest release of this app to its downstream app(s)",
      "examples": [
        "$ heroku pipelines:diff -a my-app-staging"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:diff",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "diff.js"
      ]
    },
    "pipelines": {
      "aliases": [],
      "args": {},
      "description": "list pipelines you have access to",
      "examples": [
        "$ heroku pipelines"
      ],
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "index.js"
      ]
    },
    "pipelines:info": {
      "aliases": [],
      "args": {
        "pipeline": {
          "description": "pipeline to show list of apps for",
          "name": "pipeline",
          "required": true
        }
      },
      "description": "show list of apps in a pipeline",
      "examples": [
        "$ heroku pipelines:info my-pipeline"
      ],
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "with-owners": {
          "description": "shows owner of every app",
          "hidden": true,
          "name": "with-owners",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "info.js"
      ]
    },
    "pipelines:open": {
      "aliases": [],
      "args": {
        "pipeline": {
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true
        }
      },
      "description": "open a pipeline in dashboard",
      "examples": [
        "$ heroku pipelines:open my-pipeline"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:open",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "open.js"
      ]
    },
    "pipelines:promote": {
      "aliases": [],
      "args": {},
      "description": "promote the latest release of this app to its downstream app(s)",
      "examples": [
        "$ heroku pipelines:promote -a my-app-staging"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "to": {
          "char": "t",
          "description": "comma separated list of apps to promote to",
          "name": "to",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:promote",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "promote.js"
      ]
    },
    "pipelines:remove": {
      "aliases": [],
      "args": {},
      "description": "remove this app from its pipeline",
      "examples": [
        "$ heroku pipelines:remove -a my-app"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "remove.js"
      ]
    },
    "pipelines:rename": {
      "aliases": [],
      "args": {
        "pipeline": {
          "description": "current name of pipeline",
          "name": "pipeline",
          "required": true
        },
        "name": {
          "description": "new name of pipeline",
          "name": "name",
          "required": true
        }
      },
      "description": "rename a pipeline",
      "examples": [
        "$ heroku pipelines:rename my-pipeline new-pipeline-name"
      ],
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:rename",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "rename.js"
      ]
    },
    "pipelines:setup": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name of pipeline",
          "name": "name",
          "required": false
        },
        "repo": {
          "description": "a GitHub repository to connect the pipeline to",
          "name": "repo",
          "required": false
        }
      },
      "description": "bootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed app.json in the repo)",
      "examples": [
        "$ heroku pipelines:setup my-pipeline githuborg/reponame -t my-team"
      ],
      "flags": {
        "team": {
          "char": "t",
          "description": "the team to assign pipeline ownership to (defaults to current user)",
          "name": "team",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "yes": {
          "char": "y",
          "description": "accept all default settings without prompting",
          "name": "yes",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:setup",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "setup.js"
      ]
    },
    "pipelines:transfer": {
      "aliases": [],
      "args": {
        "owner": {
          "description": "the owner to transfer the pipeline to",
          "name": "owner",
          "required": true
        }
      },
      "description": "transfer ownership of a pipeline",
      "examples": [
        "$ heroku pipelines:transfer admin@example.com -p my-pipeline",
        "$ heroku pipelines:transfer admin-team -p my-pipeline"
      ],
      "flags": {
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:transfer",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "transfer.js"
      ]
    },
    "pipelines:update": {
      "aliases": [],
      "args": {},
      "description": "update the app's stage in a pipeline",
      "examples": [
        "$ heroku pipelines:update -s staging -a my-app"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "stage": {
          "char": "s",
          "description": "new stage of app",
          "name": "stage",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pipelines:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pipelines",
        "update.js"
      ]
    },
    "ps": {
      "aliases": [],
      "args": {},
      "description": "list dynos for an app",
      "examples": [
        "$ heroku ps\n=== run: one-off dyno\nrun.1: up for 5m: bash\n=== web: bundle exec thin start -p $PORT\nweb.1: created for 30s\n",
        "$ heroku ps run # specifying types\n=== run: one-off dyno\nrun.1: up for 5m: bash\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "display as json",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "extended": {
          "char": "x",
          "hidden": true,
          "name": "extended",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ps",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "usage": "ps [TYPE [TYPE ...]]",
      "topic": "ps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "index.js"
      ]
    },
    "ps:restart": {
      "aliases": [
        "dyno:restart"
      ],
      "args": {
        "dyno": {
          "name": "dyno",
          "required": false
        }
      },
      "description": "restart app dynos",
      "examples": [
        "$ heroku ps:restart web.1",
        "$ heroku ps:restart web",
        "$ heroku ps:restart"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "restart"
      ],
      "id": "ps:restart",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "ps",
      "help": "if DYNO is not specified, restarts all dynos on app",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "restart.js"
      ]
    },
    "ps:scale": {
      "aliases": [
        "dyno:scale"
      ],
      "args": {},
      "description": "scale dyno quantity up or down\nAppending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\nOmitting any arguments will display the app's current dyno formation, in a\nformat suitable for passing back into ps:scale.\n",
      "examples": [
        "$ heroku ps:scale web=3:Standard-2X worker+1 --app APP\nScaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n",
        "$ heroku ps:scale --app APP\nweb=3:Standard-2X worker=1:Standard-1X\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "scale"
      ],
      "id": "ps:scale",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "scale.js"
      ]
    },
    "ps:stop": {
      "aliases": [
        "dyno:stop",
        "ps:kill",
        "dyno:kill"
      ],
      "args": {
        "dyno": {
          "name": "dyno",
          "required": true
        }
      },
      "description": "stop app dyno",
      "examples": [
        "$ heroku ps:stop run.1828",
        "$ heroku ps:stop run"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "stop",
        "kill"
      ],
      "id": "ps:stop",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "ps",
      "help": "stop app dyno or dyno type",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "stop.js"
      ]
    },
    "ps:type": {
      "aliases": [
        "ps:resize",
        "dyno:resize"
      ],
      "args": {},
      "description": "manage dyno sizes\nCalled with no arguments shows the current dyno size.\n\nCalled with one argument sets the size.\nWhere SIZE is one of eco|basic|standard-1x|standard-2x|performance\n\nCalled with 1..n TYPE=SIZE arguments sets the quantity per type.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "resize",
        "dyno:type"
      ],
      "id": "ps:type",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "type.js"
      ]
    },
    "ps:wait": {
      "aliases": [],
      "args": {},
      "description": "wait for all dynos to be running latest version after a release",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "type": {
          "char": "t",
          "description": "wait for one specific dyno type",
          "name": "type",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait-interval": {
          "char": "w",
          "description": "how frequently to poll in seconds (to avoid hitting Heroku API rate limits)",
          "name": "wait-interval",
          "default": 10,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "with-run": {
          "char": "R",
          "description": "whether to wait for one-off run dynos",
          "exclusive": [
            "type"
          ],
          "name": "with-run",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ps:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "wait.js"
      ]
    },
    "redis:cli": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "opens a redis prompt",
      "examples": [
        "$ heroku redis:cli --app=my-app my-database",
        "$ heroku redis:cli --app=my-app --confirm my-database"
      ],
      "flags": {
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:cli",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "cli.js"
      ]
    },
    "redis:credentials": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": false
        }
      },
      "description": "display credentials information",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "reset": {
          "description": "reset credentials",
          "name": "reset",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:credentials",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "credentials.js"
      ]
    },
    "redis:info": {
      "aliases": [
        "redis"
      ],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "gets information about redis",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "info.js"
      ]
    },
    "redis:keyspace-notifications": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "set the keyspace notifications configuration\nSet the configuration to enable keyspace notification events:\nK     Keyspace events, published with __keyspace@<db>__ prefix.\nE     Keyevent events, published with __keyevent@<db>__ prefix.\ng     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n$     String commands\nl     List commands\ns     Set commands\nh     Hash commands\nz     Sorted set commands\nt     Stream commands\nx     Expired events (events generated every time a key expires)\ne     Evicted events (events generated when a key is evicted for maxmemory)\nm     Key miss events (events generated when a key that doesn't exist is accessed)\nA     Alias for \"g$lshztxe\", so that the \"AKE\" string means all the events except \"m\".\n\npass an empty string ('') to disable keyspace notifications\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "config": {
          "char": "c",
          "description": "set keyspace notifications configuration",
          "name": "config",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:keyspace-notifications",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "keyspace-notifications.js"
      ]
    },
    "redis:maintenance": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": false
        }
      },
      "description": "manage maintenance windows\nSet or change the maintenance window for your Redis instance\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "window": {
          "char": "w",
          "description": "set weekly UTC maintenance window (format: \"Day HH:MM\", where MM is 00 or 30)",
          "name": "window",
          "required": false,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "run": {
          "description": "start maintenance",
          "name": "run",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        },
        "force": {
          "char": "f",
          "description": "start maintenance without entering application maintenance mode",
          "name": "force",
          "required": false,
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:maintenance",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "maintenance.js"
      ]
    },
    "redis:maxmemory": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "set the key eviction policy when instances reach their storage limit\n  Available policies for key eviction include:\n\n  noeviction      # returns errors when memory limit is reached\n  allkeys-lfu     # removes less frequently used keys first\n  volatile-lfu    # removes less frequently used keys first that have an expiry set\n  allkeys-lru     # removes less recently used keys first\n  volatile-lru    # removes less recently used keys first that have an expiry set\n  allkeys-random  # evicts random keys\n  volatile-random # evicts random keys but only those that have an expiry set\n  volatile-ttl    # only evicts keys with an expiry set and a short TTL\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "policy": {
          "char": "p",
          "description": "set policy name",
          "name": "policy",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:maxmemory",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "maxmemory.js"
      ]
    },
    "redis:promote": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": false
        }
      },
      "description": "sets DATABASE as your REDIS_URL",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:promote",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "promote.js"
      ]
    },
    "redis:stats-reset": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "reset all stats covered by RESETSTAT (https://redis.io/commands/config-resetstat)",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:stats-reset",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "stats-reset.js"
      ]
    },
    "redis:timeout": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "set the number of seconds to wait before killing idle connections\n    A value of zero means that connections will not be closed.\n  ",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "seconds": {
          "char": "s",
          "description": "set timeout value",
          "name": "seconds",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:timeout",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "timeout.js"
      ]
    },
    "redis:upgrade": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "perform in-place version upgrade",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "version": {
          "char": "v",
          "name": "version",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:upgrade",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "upgrade.js"
      ]
    },
    "redis:wait": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": false
        }
      },
      "description": "wait for Redis instance to be available",
      "flags": {
        "wait-interval": {
          "description": "how frequently to poll in seconds",
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "redis:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "redis",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "redis",
        "wait.js"
      ]
    },
    "releases": {
      "aliases": [],
      "args": {},
      "description": "display the releases for an app",
      "examples": [
        "v1 Config add FOO_BAR email@example.com 2015/11/17 17:37:41 (~ 1h ago)",
        "v2 Config add BAR_BAZ email@example.com 2015/11/17 17:37:41 (~ 1h ago)",
        "v3 Config add BAZ_QUX email@example.com 2015/11/17 17:37:41 (~ 1h ago)"
      ],
      "flags": {
        "num": {
          "char": "n",
          "description": "number of releases to show",
          "name": "num",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output releases in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "extended": {
          "char": "x",
          "hidden": true,
          "name": "extended",
          "allowNo": false,
          "type": "boolean"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "releases",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "releases",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "releases",
        "index.js"
      ]
    },
    "releases:info": {
      "aliases": [],
      "args": {
        "release": {
          "name": "release"
        }
      },
      "description": "view detailed information for a release",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "shell": {
          "char": "s",
          "description": "output in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "releases:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "releases",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "releases",
        "info.js"
      ]
    },
    "releases:output": {
      "aliases": [],
      "args": {
        "release": {
          "name": "release"
        }
      },
      "description": "View the release command output",
      "flags": {
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "releases:output",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "releases",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "releases",
        "output.js"
      ]
    },
    "releases:rollback": {
      "aliases": [],
      "args": {
        "release": {
          "name": "release"
        }
      },
      "description": "Roll back to a previous release.\n\n    If RELEASE is not specified, it will roll back one release.\n    ",
      "flags": {
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "rollback"
      ],
      "id": "releases:rollback",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "releases",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "releases",
        "rollback.js"
      ]
    },
    "reviewapps:disable": {
      "aliases": [],
      "args": {},
      "description": "disable review apps and/or settings on an existing pipeline",
      "examples": [
        "$ heroku reviewapps:disable -p my-pipeline -a my-app --no-autodeploy"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "parent app used by review apps",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "autodeploy": {
          "description": "disable autodeployments",
          "hidden": true,
          "name": "autodeploy",
          "allowNo": false,
          "type": "boolean"
        },
        "autodestroy": {
          "description": "disable automatically destroying review apps",
          "hidden": true,
          "name": "autodestroy",
          "allowNo": false,
          "type": "boolean"
        },
        "wait-for-ci": {
          "description": "disable wait for CI",
          "hidden": true,
          "name": "wait-for-ci",
          "allowNo": false,
          "type": "boolean"
        },
        "no-autodeploy": {
          "description": "disable autodeployments",
          "name": "no-autodeploy",
          "allowNo": false,
          "type": "boolean"
        },
        "no-autodestroy": {
          "description": "disable automatically destroying review apps",
          "name": "no-autodestroy",
          "allowNo": false,
          "type": "boolean"
        },
        "no-wait-for-ci": {
          "description": "disable wait for CI",
          "name": "no-wait-for-ci",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "reviewapps:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "reviewapps",
        "disable.js"
      ]
    },
    "reviewapps:enable": {
      "aliases": [],
      "args": {},
      "description": "enable review apps and/or settings on an existing pipeline",
      "examples": [
        "$ heroku reviewapps:enable -p my-pipeline -a my-app --autodeploy --autodestroy"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "parent app used by review apps",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "autodeploy": {
          "description": "autodeploy the review app",
          "name": "autodeploy",
          "allowNo": false,
          "type": "boolean"
        },
        "autodestroy": {
          "description": "autodestroy the review app",
          "name": "autodestroy",
          "allowNo": false,
          "type": "boolean"
        },
        "wait-for-ci": {
          "description": "wait for CI to pass before deploying",
          "name": "wait-for-ci",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "reviewapps:enable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "reviewapps",
        "enable.js"
      ]
    },
    "run:detached": {
      "aliases": [],
      "args": {},
      "description": "run a detached dyno, where output is sent to your logs",
      "examples": [
        "$ heroku run:detached ls"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "env": {
          "char": "e",
          "description": "environment variables to set (use ';' to split multiple vars)",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "size": {
          "char": "s",
          "description": "dyno size",
          "name": "size",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "tail": {
          "char": "t",
          "description": "continually stream logs",
          "name": "tail",
          "allowNo": false,
          "type": "boolean"
        },
        "type": {
          "description": "process type",
          "name": "type",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "run:detached",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "run",
        "detached.js"
      ]
    },
    "run": {
      "aliases": [],
      "args": {},
      "description": "run a one-off process inside a heroku dyno\nShows a notification if the dyno takes more than 20 seconds to start.",
      "examples": [
        "$ heroku run bash",
        "$ heroku run -s standard-2x -- myscript.sh -a arg1 -s arg2"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "parent app used by review apps",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "size": {
          "char": "s",
          "description": "dyno size",
          "name": "size",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "type": {
          "description": "process type",
          "name": "type",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "exit-code": {
          "char": "x",
          "description": "passthrough the exit code of the remote command",
          "name": "exit-code",
          "allowNo": false,
          "type": "boolean"
        },
        "env": {
          "char": "e",
          "description": "environment variables to set (use ';' to split multiple vars)",
          "name": "env",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "no-tty": {
          "description": "force the command to not run in a tty",
          "name": "no-tty",
          "allowNo": false,
          "type": "boolean"
        },
        "listen": {
          "description": "listen on a local port",
          "hidden": true,
          "name": "listen",
          "allowNo": false,
          "type": "boolean"
        },
        "no-notify": {
          "description": "disables notification when dyno is up (alternatively use HEROKU_NOTIFICATIONS=0)",
          "name": "no-notify",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "run",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "run",
        "index.js"
      ]
    },
    "run:inside": {
      "aliases": [],
      "args": {},
      "description": "run a one-off process inside an existing heroku dyno",
      "examples": [
        "$ heroku run:inside web.1 bash"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "exit-code": {
          "char": "x",
          "description": "passthrough the exit code of the remote command",
          "name": "exit-code",
          "allowNo": false,
          "type": "boolean"
        },
        "listen": {
          "description": "listen on a local port",
          "hidden": true,
          "name": "listen",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "run:inside",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "run",
        "inside.js"
      ]
    },
    "sessions:destroy": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "delete (logout) OAuth session by ID",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "sessions:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "sessions",
        "destroy.js"
      ]
    },
    "sessions": {
      "aliases": [],
      "args": {},
      "description": "list your OAuth sessions",
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "sessions",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "sessions",
        "index.js"
      ]
    },
    "spaces:create": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "create a new space\n",
      "examples": [
        "Example:\n\n$ heroku spaces:create --space my-space --team my-team --region oregon\nCreating space my-space in team my-team... done\n=== my-space\nID:         e7b99e37-69b3-4475-ad47-a5cc5d75fd9f\nTeam:       my-team\nRegion:     oregon\nCIDR:       10.0.0.0/16\nData CIDR:  172.23.0.0/20\nState:      allocating\nCreated at: 2016-01-06T03:23:13Z\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "name of space to create",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "channel": {
          "hidden": true,
          "name": "channel",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "region": {
          "description": "region name",
          "name": "region",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "features": {
          "description": "a list of features separated by commas",
          "hidden": true,
          "name": "features",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "log-drain-url": {
          "description": "direct log drain url",
          "hidden": true,
          "name": "log-drain-url",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shield": {
          "description": "create a Shield space",
          "hidden": true,
          "name": "shield",
          "allowNo": false,
          "type": "boolean"
        },
        "cidr": {
          "description": "RFC-1918 CIDR the space will use",
          "name": "cidr",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "kpi-url": {
          "description": "self-managed KPI endpoint to use",
          "hidden": true,
          "name": "kpi-url",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "data-cidr": {
          "description": "RFC-1918 CIDR used by Heroku Data resources for the space",
          "name": "data-cidr",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "create.js"
      ]
    },
    "spaces:destroy": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "destroy a space\n",
      "examples": [
        "$ heroku spaces:destroy --space my-space\nDestroying my-space... done\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space to destroy",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "set to space name to bypass confirm prompt",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "destroy.js"
      ]
    },
    "spaces:hosts": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "list dedicated hosts for a space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get host list from",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "spaces:hosts",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "hosts.js"
      ]
    },
    "spaces": {
      "aliases": [],
      "args": {},
      "description": "list available spaces",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "team": {
          "char": "t",
          "description": "team to use",
          "name": "team",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "index.js"
      ]
    },
    "spaces:info": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "show info about a space",
      "examples": "$ heroku spaces:info my-space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get info of",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:info my-space",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "info.js"
      ]
    },
    "spaces:ps": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "list dynos for a space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get dynos of",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:ps",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "ps.js"
      ]
    },
    "spaces:rename": {
      "aliases": [],
      "args": {},
      "description": "renames a space",
      "examples": "$ heroku spaces:rename --from old-space-name --to new-space-name\nRenaming space old-space-name to new-space-name... done\n",
      "flags": {
        "from": {
          "description": "current name of space",
          "name": "from",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "to": {
          "description": "desired name of space",
          "name": "to",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:rename",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:rename --from old-space-name --to new-space-name\nRenaming space old-space-name to new-space-name... done\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "rename.js"
      ]
    },
    "spaces:topology": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "show space topology",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get topology of",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:topology",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "topology.js"
      ]
    },
    "spaces:transfer": {
      "aliases": [],
      "args": {},
      "description": "transfer a space to another team",
      "examples": [
        "$ heroku spaces:transfer --space=space-name --team=team-name\nTransferring space-name to team-name... done\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "name of space",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "team": {
          "char": "t",
          "description": "desired owner of space",
          "name": "team",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:transfer",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "transfer.js"
      ]
    },
    "spaces:wait": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "wait for a space to be created",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get info of",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "interval": {
          "char": "i",
          "description": "seconds to wait between poll intervals",
          "name": "interval",
          "default": 30,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "maximum number of seconds to wait",
          "name": "timeout",
          "default": 1500,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "wait.js"
      ]
    },
    "teams": {
      "aliases": [],
      "args": {},
      "description": "list the teams that you are a member of\n\nUse heroku members:* to manage team members.",
      "flags": {
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "teams",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "teams",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "teams",
        "index.js"
      ]
    },
    "webhooks:add": {
      "aliases": [],
      "args": {},
      "description": "add a webhook to an app",
      "examples": [
        "$ heroku webhooks:add -i api:dyno -l notify -u https://example.com/hooks"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "include": {
          "char": "i",
          "description": "comma delimited event types your server will receive ",
          "name": "include",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "level": {
          "char": "l",
          "description": "notify does not retry, sync will retry until successful or timeout",
          "name": "level",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "secret": {
          "char": "s",
          "description": "value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header",
          "name": "secret",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "authorization": {
          "char": "t",
          "description": "authorization header to send with webhooks",
          "name": "authorization",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "url": {
          "char": "u",
          "description": "URL for receiver",
          "name": "url",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "add.js"
      ]
    },
    "webhooks": {
      "aliases": [],
      "args": {},
      "description": "list webhooks on an app",
      "examples": [
        "$ heroku webhooks"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "index.js"
      ]
    },
    "webhooks:info": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "info for a webhook on an app",
      "examples": [
        "$ heroku webhooks:info 99999999-9999-9999-9999-999999999999"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": [
        "$ heroku webhooks:info 99999999-9999-9999-9999-999999999999"
      ],
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "info.js"
      ]
    },
    "webhooks:remove": {
      "aliases": [],
      "args": {
        "id": {
          "description": "id of webhook to remove",
          "name": "id",
          "required": true
        }
      },
      "description": "removes a webhook from an app",
      "examples": [
        "$ heroku webhooks:remove 99999999-9999-9999-9999-999999999999"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "remove.js"
      ]
    },
    "webhooks:update": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "updates a webhook in an app",
      "examples": [
        "$ heroku webhooks:update 99999999-9999-9999-9999-999999999999 -i dyno -l notify -s 09928c40bf1b191b645174a19f7053d16a180da37332e719ef0998f4c0a2 -u https://example.com/hooks"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "include": {
          "char": "i",
          "description": "comma delimited event types your server will receive ",
          "name": "include",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "level": {
          "char": "l",
          "description": "notify does not retry, sync will retry until successful or timeout",
          "name": "level",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "secret": {
          "char": "s",
          "description": "value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header",
          "name": "secret",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "authorization": {
          "char": "t",
          "description": "authorization header to send with webhooks",
          "name": "authorization",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "url": {
          "char": "u",
          "description": "URL for receiver",
          "name": "url",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "update.js"
      ]
    },
    "apps:favorites:add": {
      "aliases": [],
      "args": {},
      "description": "favorites an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:favorites:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "favorites",
        "add.js"
      ]
    },
    "apps:favorites": {
      "aliases": [],
      "args": {},
      "description": "list favorited apps",
      "flags": {
        "json": {
          "char": "j",
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:favorites",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "favorites",
        "index.js"
      ]
    },
    "apps:favorites:remove": {
      "aliases": [],
      "args": {},
      "description": "unfavorites an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "apps:favorites:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "favorites",
        "remove.js"
      ]
    },
    "apps:stacks": {
      "aliases": [],
      "args": {},
      "description": "show the list of available stacks",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "stack"
      ],
      "id": "apps:stacks",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "apps",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "stacks",
        "index.js"
      ]
    },
    "apps:stacks:set": {
      "aliases": [],
      "args": {
        "stack": {
          "name": "stack",
          "required": true
        }
      },
      "description": "set the stack of an app",
      "examples": "$ heroku stack:set heroku-22 -a myapp\nSetting stack to heroku-22... done\nYou will need to redeploy myapp for the change to take effect.\nRun git push heroku main to trigger a new build on myapp.",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "stack:set"
      ],
      "id": "apps:stacks:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": "$ heroku stack:set heroku-22 -a myapp\nSetting stack to heroku-22... done\nYou will need to redeploy myapp for the change to take effect.\nRun git push heroku main to trigger a new build on myapp.",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "apps",
        "stacks",
        "set.js"
      ]
    },
    "auth:2fa:disable": {
      "aliases": [
        "twofactor:disable",
        "2fa:disable"
      ],
      "args": {},
      "description": "disables 2fa on account",
      "examples": "$ heroku auth:2fa:disable",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:2fa:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "example": "$ heroku auth:2fa:disable",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "2fa",
        "disable.js"
      ]
    },
    "auth:2fa": {
      "aliases": [
        "2fa",
        "twofactor"
      ],
      "args": {},
      "description": "check 2fa status",
      "flags": {},
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "auth:2fa",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "auth",
        "2fa",
        "index.js"
      ]
    },
    "certs:auto:disable": {
      "aliases": [],
      "args": {},
      "description": "disable ACM for an app",
      "flags": {
        "confirm": {
          "char": "c",
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:auto:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "auto",
        "disable.js"
      ]
    },
    "certs:auto:enable": {
      "aliases": [],
      "args": {},
      "description": "enable ACM status for an app",
      "flags": {
        "wait": {
          "description": "watch ACM status and exit when complete",
          "name": "wait",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:auto:enable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "auto",
        "enable.js"
      ]
    },
    "certs:auto": {
      "aliases": [],
      "args": {},
      "description": "show ACM status for an app",
      "flags": {
        "wait": {
          "description": "watch ACM status and display the status when complete",
          "name": "wait",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:auto",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "auto",
        "index.js"
      ]
    },
    "certs:auto:refresh": {
      "aliases": [],
      "args": {},
      "description": "refresh ACM for an app",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "certs:auto:refresh",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "certs",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "auto",
        "refresh.js"
      ]
    },
    "certs:auto:wait": {
      "aliases": [],
      "args": {},
      "description": "waits for the certificate to be activated",
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "certs:auto:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "certs",
        "auto",
        "wait.js"
      ]
    },
    "ci:config:get": {
      "aliases": [],
      "args": {
        "key": {
          "name": "key",
          "required": true
        }
      },
      "description": "get a CI config var",
      "examples": [
        "$ heroku ci:config:get --pipeline=PIPELINE RAILS_ENV\n    test"
      ],
      "flags": {
        "help": {
          "char": "h",
          "description": "Show CLI help.",
          "name": "help",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shell": {
          "char": "s",
          "description": "output config var in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:config:get",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "config",
        "get.js"
      ]
    },
    "ci:config": {
      "aliases": [],
      "args": {},
      "description": "display CI config vars",
      "examples": [
        "$ heroku ci:config --app murmuring-headland-14719 --json\n"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "shell": {
          "char": "s",
          "description": "output config vars in shell format",
          "name": "shell",
          "allowNo": false,
          "type": "boolean"
        },
        "json": {
          "description": "output config vars in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:config",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "config",
        "index.js"
      ]
    },
    "ci:config:set": {
      "aliases": [],
      "args": {},
      "description": "set CI config vars",
      "examples": [
        "$ heroku ci:config:set --pipeline PIPELINE RAILS_ENV=test\n    Setting test config vars... done\n    RAILS_ENV: test"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:config:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "config",
        "set.js"
      ]
    },
    "ci:config:unset": {
      "aliases": [],
      "args": {},
      "description": "unset CI config vars",
      "examples": [
        "$ heroku ci:config:unset RAILS_ENV"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "name of pipeline",
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ci:config:unset",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "ci",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ci",
        "config",
        "unset.js"
      ]
    },
    "pg:backups:cancel": {
      "aliases": [],
      "args": {
        "backup_id": {
          "name": "backup_id"
        }
      },
      "description": "cancel an in-progress backup or restore (default newest)",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:cancel",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "cancel.js"
      ]
    },
    "pg:backups:capture": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "capture a new backup",
      "flags": {
        "wait-interval": {
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:capture",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "capture.js"
      ]
    },
    "pg:backups:delete": {
      "aliases": [],
      "args": {
        "backup_id": {
          "name": "backup_id",
          "required": true
        }
      },
      "description": "delete a backup",
      "examples": [
        "$ heroku pg:backup:delete --app APP_ID BACKUP_ID"
      ],
      "flags": {
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:delete",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "delete.js"
      ]
    },
    "pg:backups:download": {
      "aliases": [],
      "args": {
        "backup_id": {
          "name": "backup_id"
        }
      },
      "description": "downloads database backup",
      "flags": {
        "output": {
          "char": "o",
          "description": "location to download to. Defaults to latest.dump",
          "name": "output",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:download",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "download.js"
      ]
    },
    "pg:backups": {
      "aliases": [],
      "args": {},
      "description": "list database backups",
      "flags": {
        "verbose": {
          "char": "v",
          "hidden": true,
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "confirm": {
          "char": "c",
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "output": {
          "char": "o",
          "hidden": true,
          "name": "output",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "wait-interval": {
          "hidden": true,
          "name": "wait-interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "at": {
          "hidden": true,
          "name": "at",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "quiet": {
          "char": "q",
          "hidden": true,
          "name": "quiet",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "index.js"
      ]
    },
    "pg:backups:info": {
      "aliases": [],
      "args": {
        "backup_id": {
          "name": "backup_id"
        }
      },
      "description": "get information about a specific backup",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "info.js"
      ]
    },
    "pg:backups:restore": {
      "aliases": [],
      "args": {
        "backup": {
          "name": "backup"
        },
        "database": {
          "name": "database"
        }
      },
      "description": "restore a backup (default latest) to a database",
      "flags": {
        "wait-interval": {
          "name": "wait-interval",
          "default": 3,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "extensions": {
          "char": "e",
          "description": "comma-separated list of extensions to pre-install in the public schema\ndefaults to saving the latest database to DATABASE_URL\n",
          "name": "extensions",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "verbose": {
          "char": "v",
          "name": "verbose",
          "allowNo": false,
          "type": "boolean"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:restore",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "restore.js"
      ]
    },
    "pg:backups:schedule": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "schedule daily backups for given database",
      "flags": {
        "at": {
          "description": "at a specific (24h) hour in the given timezone. Defaults to UTC. --at '[HOUR]:00 [TIMEZONE]'",
          "name": "at",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:schedule",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "schedule.js"
      ]
    },
    "pg:backups:schedules": {
      "aliases": [],
      "args": {},
      "description": "list backup schedule",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:schedules",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "schedules.js"
      ]
    },
    "pg:backups:unschedule": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "stop daily backups",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:unschedule",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "unschedule.js"
      ]
    },
    "pg:backups:url": {
      "aliases": [],
      "args": {
        "backup_id": {
          "name": "backup_id"
        }
      },
      "description": "get secret but publicly accessible URL of a backup",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:backups:url",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "backups",
        "url.js"
      ]
    },
    "pg:connection-pooling:attach": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "add an attachment to a database using connection pooling",
      "examples": [
        "$ heroku pg:connection-pooling:attach postgresql-something-12345\n"
      ],
      "flags": {
        "as": {
          "description": "name for add-on attachment",
          "name": "as",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:connection-pooling:attach",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "connection-pooling",
        "attach.js"
      ]
    },
    "pg:credentials:create": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "create credential within database\nExample:\n\n    heroku pg:credentials:create postgresql-something-12345 --name new-cred-name\n",
      "flags": {
        "name": {
          "char": "n",
          "description": "name of the new credential within the database",
          "name": "name",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials",
        "create.js"
      ]
    },
    "pg:credentials:destroy": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "destroy credential within database",
      "examples": "$ heroku pg:credentials:destroy postgresql-transparent-56874 --name cred-name -a woodstock-production",
      "flags": {
        "name": {
          "char": "n",
          "description": "unique identifier for the credential",
          "name": "name",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "example": "$ heroku pg:credentials:destroy postgresql-transparent-56874 --name cred-name -a woodstock-production",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials",
        "destroy.js"
      ]
    },
    "pg:credentials:repair-default": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "repair the permissions of the default credential within database",
      "examples": "$ heroku pg:credentials:repair-default postgresql-something-12345",
      "flags": {
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials:repair-default",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "example": "$ heroku pg:credentials:repair-default postgresql-something-12345",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials",
        "repair-default.js"
      ]
    },
    "pg:credentials:rotate": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "rotate the database credentials",
      "flags": {
        "name": {
          "char": "n",
          "description": "which credential to rotate (default credentials if not specified and --all is not used)",
          "name": "name",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "all": {
          "description": "rotate all credentials",
          "exclusive": [
            "name"
          ],
          "name": "all",
          "allowNo": false,
          "type": "boolean"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "force": {
          "description": "forces rotating the targeted credentials",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials:rotate",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials",
        "rotate.js"
      ]
    },
    "pg:credentials:url": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show information on a database credential",
      "flags": {
        "name": {
          "char": "n",
          "description": "which credential to show (default credentials if not specified)",
          "name": "name",
          "default": "default",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:credentials:url",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "credentials",
        "url.js"
      ]
    },
    "pg:links:create": {
      "aliases": [],
      "args": {
        "remote": {
          "name": "remote",
          "required": true
        },
        "database": {
          "name": "database",
          "required": true
        }
      },
      "description": "create a link between data stores\nExample:\nheroku pg:links:create HEROKU_REDIS_RED HEROKU_POSTGRESQL_CERULEAN\n",
      "flags": {
        "as": {
          "description": "name of link to create",
          "name": "as",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:links:create",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "links",
        "create.js"
      ]
    },
    "pg:links:destroy": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database",
          "required": true
        },
        "link": {
          "name": "link",
          "required": true
        }
      },
      "description": "destroys a link between data stores",
      "examples": "$ heroku pg:links:destroy HEROKU_POSTGRESQL_CERULEAN redis-symmetrical-100",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "char": "c",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:links:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "example": "$ heroku pg:links:destroy HEROKU_POSTGRESQL_CERULEAN redis-symmetrical-100",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "links",
        "destroy.js"
      ]
    },
    "pg:links": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "lists all databases and information on link",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:links",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "links",
        "index.js"
      ]
    },
    "pg:maintenance": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show current maintenance information",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:maintenance",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "maintenance",
        "index.js"
      ]
    },
    "pg:maintenance:run": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "start maintenance",
      "flags": {
        "force": {
          "char": "f",
          "name": "force",
          "allowNo": false,
          "type": "boolean"
        },
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:maintenance:run",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "maintenance",
        "run.js"
      ]
    },
    "pg:maintenance:window": {
      "aliases": [],
      "args": {
        "window": {
          "name": "window",
          "required": true
        },
        "database": {
          "name": "database"
        }
      },
      "description": "Set weekly maintenance window.\nAll times are in UTC.\n",
      "examples": "$ heroku pg:maintenance:window \"Sunday 06:00\" postgres-slippery-100",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:maintenance:window",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "example": "$ heroku pg:maintenance:window \"Sunday 06:00\" postgres-slippery-100",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "maintenance",
        "window.js"
      ]
    },
    "pg:settings:auto-explain": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Automatically log execution plans of queries without running EXPLAIN by hand.\nThe auto_explain module is loaded at session-time so existing connections will not be logged.\nRestart your Heroku app and/or restart existing connections for logging to start taking place.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": false,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain.js"
      ]
    },
    "pg:settings": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        }
      },
      "description": "show your current database settings",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "index.js"
      ]
    },
    "pg:settings:log-connections": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Controls whether a log message is produced when a login attempt is made. Default is true.\nSetting log_connections to false stops emitting log messages for all attempts to login to the database.",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:log-connections",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "log-connections.js"
      ]
    },
    "pg:settings:log-lock-waits": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Controls whether a log message is produced when a session waits longer than the deadlock_timeout to acquire a lock. deadlock_timeout is set to 1 second\nDelays due to lock contention occur when multiple transactions are trying to access the same resource at the same time.\nApplications and their query patterns should try to avoid changes to many different tables within the same transaction.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:log-lock-waits",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "log-lock-waits.js"
      ]
    },
    "pg:settings:log-min-duration-statement": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "The duration of each completed statement will be logged if the statement completes after the time specified by VALUE.\nVALUE needs to specified as a whole number, in milliseconds.\nSetting log_min_duration_statement to zero prints all statement durations and -1 will disable logging statement durations.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:log-min-duration-statement",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "log-min-duration-statement.js"
      ]
    },
    "pg:settings:log-statement": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value",
          "options": [
            "none",
            "ddl",
            "mod",
            "all"
          ]
        }
      },
      "description": "log_statement controls which SQL statements are logged.\nValid values for VALUE:\nnone - No statements are logged\nddl  - All data definition statements, such as CREATE, ALTER and DROP will be logged\nmod  - Includes all statements from ddl as well as data-modifying statements such as INSERT, UPDATE, DELETE, TRUNCATE, COPY\nall  - All statements are logged\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:log-statement",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "log-statement.js"
      ]
    },
    "pg:settings:track-functions": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value",
          "options": [
            "none",
            "pl",
            "all"
          ]
        }
      },
      "description": "track_functions controls tracking of function call counts and time used. Default is none.\nValid values for VALUE:\nnone - No functions are tracked (default)\npl   - Only procedural language functions are tracked\nall  - All functions, including SQL and C language functions, are tracked. Simple SQL-language that are inlined are not tracked",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:track-functions",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "track-functions.js"
      ]
    },
    "ps:autoscale:disable": {
      "aliases": [],
      "args": {},
      "description": "disable web dyno autoscaling",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ps:autoscale:disable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "autoscale",
        "disable.js"
      ]
    },
    "ps:autoscale:enable": {
      "aliases": [],
      "args": {},
      "description": "enable web dyno autoscaling",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "min": {
          "description": "minimum number of dynos",
          "name": "min",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "max": {
          "description": "maximum number of dynos",
          "name": "max",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "p95": {
          "description": "desired p95 response time",
          "name": "p95",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "notifications": {
          "description": "receive email notifications when the max dyno limit is reached",
          "name": "notifications",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "ps:autoscale:enable",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "ps",
        "autoscale",
        "enable.js"
      ]
    },
    "spaces:drains:get": {
      "aliases": [
        "drains:get"
      ],
      "args": {},
      "description": "display the log drain for a space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space for which to get log drain",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "spaces:drains:get",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "drains",
        "get.js"
      ]
    },
    "spaces:drains:set": {
      "aliases": [
        "drains:set"
      ],
      "args": {
        "url": {
          "name": "url",
          "required": true
        }
      },
      "description": "replaces the log drain for a space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space for which to set log drain",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hidden": true,
      "hiddenAliases": [],
      "id": "spaces:drains:set",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "drains",
        "set.js"
      ]
    },
    "spaces:peerings:accept": {
      "aliases": [],
      "args": {
        "pcxid": {
          "hidden": true,
          "name": "pcxid"
        },
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "accepts a pending peering request for a private space",
      "examples": [
        "$ heroku spaces:peerings:accept pcx-4bd27022 --space example-space\n    Accepting and configuring peering connection pcx-4bd27022\n"
      ],
      "flags": {
        "pcxid": {
          "char": "p",
          "description": "PCX ID of a pending peering",
          "name": "pcxid",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "space": {
          "char": "s",
          "description": "space to get peering info from",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:peerings:accept",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "peerings",
        "accept.js"
      ]
    },
    "spaces:peerings:destroy": {
      "aliases": [],
      "args": {
        "pcxid": {
          "hidden": true,
          "name": "pcxid"
        }
      },
      "description": "destroys an active peering connection in a private space",
      "examples": "$ heroku spaces:peerings:destroy pcx-4bd27022 --confirm pcx-4bd27022 --space example-space\nTearing down peering connection pcx-4bd27022... done\n",
      "flags": {
        "pcxid": {
          "char": "p",
          "description": "PCX ID of a pending peering",
          "name": "pcxid",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "space": {
          "char": "s",
          "description": "space to get peering info from",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "set to PCX ID to bypass confirm prompt",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:peerings:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:peerings:destroy pcx-4bd27022 --confirm pcx-4bd27022 --space example-space\nTearing down peering connection pcx-4bd27022... done\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "peerings",
        "destroy.js"
      ]
    },
    "spaces:peerings": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "list peering connections for a space",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get peer list from",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:peerings",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "peerings",
        "index.js"
      ]
    },
    "spaces:peerings:info": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "display the information necessary to initiate a peering connection\n\nYou will use the information provided by this command to establish a peering connection request from your AWS VPC to your private space.\n\nTo start the peering process, go into your AWS console for the VPC you would like peered with your Private Space,\nnavigate to the VPC service, choose the \"Peering Connections\" option and click the \"Create peering connection\" button.\n\n- The AWS Account ID and VPC ID are necessary for the AWS VPC Peering connection wizard.\n- You will also need to configure your VPC route table to route the Dyno CIDRs through the peering connection.\n\nOnce you've established the peering connection request, you can use the spaces:peerings:accept command to accept and\nconfigure the peering connection for the space.\n",
      "examples": [
        "$ heroku spaces:peering:info example-space\n=== example-space  Peering Info\n\nAWS Account ID:    012345678910\nAWS Region:        us-west-2\nAWS VPC ID:        vpc-baadf00d\nAWS VPC CIDR:      10.0.0.0/16\nSpace CIDRs:       10.0.128.0/20, 10.0.144.0/20\nUnavailable CIDRs: 10.1.0.0/16\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get peering info from",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "spaces:peering:info"
      ],
      "id": "spaces:peerings:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "peerings",
        "info.js"
      ]
    },
    "spaces:trusted-ips:add": {
      "aliases": [],
      "args": {
        "source": {
          "name": "source",
          "required": true
        }
      },
      "description": "Add one range to the list of trusted IP ranges\nUses CIDR notation.",
      "examples": [
        "$ heroku trusted-ips:add --space my-space 192.168.2.0/24\n  Added 192.168.0.1/24 to trusted IP ranges on my-space"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space to add rule to",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "set to space name to bypass confirm prompt",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "trusted-ips:add"
      ],
      "id": "spaces:trusted-ips:add",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "trusted-ips",
        "add.js"
      ]
    },
    "spaces:trusted-ips": {
      "aliases": [],
      "args": {
        "space": {
          "hidden": true,
          "name": "space"
        }
      },
      "description": "list trusted IP ranges for a space\nTrusted IP ranges are only available on Private Spaces.\n\nThe space name is a required parameter. Newly created spaces will have 0.0.0.0/0 set by default\nallowing all traffic to applications in the space. More than one CIDR block can be provided at\na time to the commands listed below. For example 1.2.3.4/20 and 5.6.7.8/20 can be added with:\n",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get inbound rules from",
          "name": "space",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "trusted-ips"
      ],
      "id": "spaces:trusted-ips",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "trusted-ips",
        "index.js"
      ]
    },
    "spaces:trusted-ips:remove": {
      "aliases": [],
      "args": {
        "source": {
          "name": "source",
          "required": true
        }
      },
      "description": "Remove a range from the list of trusted IP ranges\nUses CIDR notation.",
      "examples": [
        "$ heroku trusted-ips:remove --space my-space 192.168.2.0/24\n    Removed 192.168.2.0/24 from trusted IP ranges on my-space\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space to remove rule from",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "set to space name to bypass confirm prompt",
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [
        "trusted-ips:remove"
      ],
      "id": "spaces:trusted-ips:remove",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "trusted-ips",
        "remove.js"
      ]
    },
    "spaces:vpn:config": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection to retrieve config from",
          "name": "name",
          "required": true
        }
      },
      "description": "display the configuration information for VPN\n\nYou will use the information provided by this command to establish a Private Space VPN Connection.\n\n- You must configure your VPN Gateway to use both Tunnels provided by Heroku\n- The VPN Gateway values are the IP addresses of the Private Space Tunnels\n- The Customer Gateway value is the Public IP of your VPN Gateway\n- The VPN Gateway must use the IKE Version shown and the Pre-shared Keys as the authentication method\n",
      "examples": "$ heroku spaces:vpn:config vpn-connection-name --space my-space\n=== vpn-connection-name VPN Tunnels\n VPN Tunnel Customer Gateway VPN Gateway    Pre-shared Key Routable Subnets IKE Version\n ────────── ──────────────── ────────────── ────────────── ──────────────── ───────────\n Tunnel 1    104.196.121.200   35.171.237.136  abcdef12345     10.0.0.0/16       1\n Tunnel 2    104.196.121.200   52.44.7.216     fedcba54321     10.0.0.0/16       1\n",
      "flags": {
        "space": {
          "char": "s",
          "description": "space the VPN connection belongs to",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:config",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:vpn:config vpn-connection-name --space my-space\n=== vpn-connection-name VPN Tunnels\n VPN Tunnel Customer Gateway VPN Gateway    Pre-shared Key Routable Subnets IKE Version\n ────────── ──────────────── ────────────── ────────────── ──────────────── ───────────\n Tunnel 1    104.196.121.200   35.171.237.136  abcdef12345     10.0.0.0/16       1\n Tunnel 2    104.196.121.200   52.44.7.216     fedcba54321     10.0.0.0/16       1\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "config.js"
      ]
    },
    "spaces:vpn:connect": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection to create",
          "name": "name",
          "required": true
        }
      },
      "description": "create VPN\nPrivate Spaces can be connected to another private network via an IPSec VPN connection allowing dynos to connect to hosts on your private networks and vice versa.\nThe connection is established over the public Internet but all traffic is encrypted using IPSec.\n",
      "examples": [
        "$ heroku spaces:vpn:connect vpn-connection-name --ip 35.161.69.30 --cidrs 172.16.0.0/16,10.0.0.0/24 --space my-space\nCreating VPN Connection in space my-space... done\n▸    Use spaces:vpn:wait to track allocation.\n"
      ],
      "flags": {
        "ip": {
          "char": "i",
          "description": "public IP of customer gateway",
          "name": "ip",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "cidrs": {
          "char": "c",
          "description": "a list of routable CIDRs separated by commas",
          "name": "cidrs",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "space": {
          "char": "s",
          "description": "space name",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:connect",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "connect.js"
      ]
    },
    "spaces:vpn:connections": {
      "aliases": [],
      "args": {},
      "description": "list the VPN Connections for a space",
      "examples": "$ heroku spaces:vpn:connections --space my-space\n=== my-space VPN Connections\n Name   Status Tunnels \n ────── ────── ─────── \n office active UP/UP   \n",
      "flags": {
        "space": {
          "char": "s",
          "description": "space to get VPN connections from",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:connections",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:vpn:connections --space my-space\n=== my-space VPN Connections\n Name   Status Tunnels \n ────── ────── ─────── \n office active UP/UP   \n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "connections.js"
      ]
    },
    "spaces:vpn:destroy": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection to destroy",
          "name": "name",
          "required": true
        }
      },
      "description": "destroys VPN in a private space",
      "examples": [
        "$ heroku spaces:vpn:destroy vpn-connection-name --space example-space --confirm vpn-connection-name\nTearing down VPN Connection vpn-connection-name in space example-space\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space name",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "confirm": {
          "description": "set to VPN connection name to bypass confirm prompt",
          "hidden": true,
          "name": "confirm",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:destroy",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "destroy.js"
      ]
    },
    "spaces:vpn:info": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection to get info from",
          "name": "name",
          "required": true
        }
      },
      "description": "display the information for VPN",
      "examples": "$ heroku spaces:vpn:info vpn-connection-name --space my-space\n=== vpn-connection-name VPN Tunnel Info\nName:           vpn-connection-name\nID:             123456789012\nPublic IP:      35.161.69.30\nRoutable CIDRs: 172.16.0.0/16\nStatus:         failed\nStatus Message: supplied CIDR block already in use\n=== my-space Tunnel Info\n VPN Tunnel IP Address    Status Last Changed         Details\n ────────── ───────────── ────── ──────────────────── ─────────────\n Tunnel 1   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n Tunnel 2   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n",
      "flags": {
        "space": {
          "char": "s",
          "description": "space the vpn connection belongs to",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:vpn:info vpn-connection-name --space my-space\n=== vpn-connection-name VPN Tunnel Info\nName:           vpn-connection-name\nID:             123456789012\nPublic IP:      35.161.69.30\nRoutable CIDRs: 172.16.0.0/16\nStatus:         failed\nStatus Message: supplied CIDR block already in use\n=== my-space Tunnel Info\n VPN Tunnel IP Address    Status Last Changed         Details\n ────────── ───────────── ────── ──────────────────── ─────────────\n Tunnel 1   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n Tunnel 2   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "info.js"
      ]
    },
    "spaces:vpn:update": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection to update",
          "name": "name",
          "required": true
        }
      },
      "description": "update VPN\nPrivate Spaces can be connected to another private network via an IPSec VPN connection allowing dynos to connect to hosts on your private networks and vice versa.\nThe connection is established over the public Internet but all traffic is encrypted using IPSec.\n",
      "examples": "$ heroku spaces:vpn:update vpn-connection-name --space my-space --cidrs 172.16.0.0/16,10.0.0.0/24\nUpdating VPN Connection in space my-space... done\n",
      "flags": {
        "cidrs": {
          "char": "c",
          "description": "a list of routable CIDRs separated by commas",
          "name": "cidrs",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "space": {
          "char": "s",
          "description": "space name",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:update",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "example": "$ heroku spaces:vpn:update vpn-connection-name --space my-space --cidrs 172.16.0.0/16,10.0.0.0/24\nUpdating VPN Connection in space my-space... done\n",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "update.js"
      ]
    },
    "spaces:vpn:wait": {
      "aliases": [],
      "args": {
        "name": {
          "description": "name or id of the VPN connection you are waiting on for allocation.",
          "name": "name",
          "required": true
        }
      },
      "description": "wait for VPN Connection to be created",
      "examples": [
        " $ heroku spaces:vpn:wait vpn-connection-name --space my-space\n Waiting for VPN Connection vpn-connection-name to allocate... done\n === my-space VPN Tunnels\n\nVPN Tunnel Customer Gateway VPN Gateway    Pre-shared Key Routable Subnets IKE Version\n────────── ──────────────── ────────────── ────────────── ──────────────── ───────────\nTunnel 1    104.196.121.200   35.171.237.136  abcdef12345     10.0.0.0/16       1\nTunnel 2    104.196.121.200   52.44.7.216     fedcba54321     10.0.0.0/16       1\n"
      ],
      "flags": {
        "space": {
          "char": "s",
          "description": "space the vpn connection belongs to",
          "name": "space",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "json": {
          "description": "output in json format",
          "name": "json",
          "allowNo": false,
          "type": "boolean"
        },
        "interval": {
          "char": "i",
          "description": "seconds to wait between poll intervals",
          "name": "interval",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "timeout": {
          "char": "t",
          "description": "maximum number of seconds to wait",
          "name": "timeout",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "spaces:vpn:wait",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "topic": "spaces",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "spaces",
        "vpn",
        "wait.js"
      ]
    },
    "webhooks:deliveries": {
      "aliases": [],
      "args": {},
      "description": "list webhook deliveries on an app",
      "examples": [
        "$ heroku webhooks:deliveries"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "status": {
          "char": "s",
          "description": "filter deliveries by status",
          "name": "status",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:deliveries",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "deliveries",
        "index.js"
      ]
    },
    "webhooks:deliveries:info": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "info for a webhook event on an app",
      "examples": [
        "$ heroku webhooks:deliveries:info 99999999-9999-9999-9999-999999999999"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:deliveries:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "deliveries",
        "info.js"
      ]
    },
    "webhooks:events": {
      "aliases": [],
      "args": {},
      "description": "list webhook events on an app",
      "examples": [
        "$ heroku webhooks:events"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:events",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "events",
        "index.js"
      ]
    },
    "webhooks:events:info": {
      "aliases": [],
      "args": {
        "id": {
          "name": "id",
          "required": true
        }
      },
      "description": "info for a webhook event on an app",
      "examples": [
        "$ heroku webhooks:events:info 99999999-9999-9999-9999-999999999999"
      ],
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "pipeline": {
          "char": "p",
          "description": "pipeline on which to list",
          "hidden": true,
          "name": "pipeline",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "webhooks:events:info",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "strict": true,
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "webhooks",
        "events",
        "info.js"
      ]
    },
    "pg:settings:auto-explain:log-analyze": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Shows actual run times on the execution plan.\nThis is equivalent to calling EXPLAIN ANALYZE.\n\nWARNING: EXPLAIN ANALYZE will be run on ALL queries, not just logged queries. This can cause significant performance impacts to your database and should be used with caution.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-analyze",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-analyze.js"
      ]
    },
    "pg:settings:auto-explain:log-buffers": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Includes buffer usage statistics when execution plans are logged.\nThis is equivalent to calling EXPLAIN BUFFERS and can only be used in conjunction with pg:settings:auto-explain:log-analyze turned on.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-buffers",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-buffers.js"
      ]
    },
    "pg:settings:auto-explain:log-min-duration": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Sets the minimum execution time in milliseconds for a statement's plan to be logged.\nSetting this value to 0 will log all queries. Setting this value to -1 will disable logging entirely.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-min-duration",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-min-duration.js"
      ]
    },
    "pg:settings:auto-explain:log-nested-statements": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Nested statements are included in the execution plan's log.",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-nested-statements",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-nested-statements.js"
      ]
    },
    "pg:settings:auto-explain:log-triggers": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Includes trigger execution statistics in execution plan logs.\nThis parameter can only be used in conjunction with pg:settings:auto-explain:log-analyze turned on.\n",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-triggers",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-triggers.js"
      ]
    },
    "pg:settings:auto-explain:log-verbose": {
      "aliases": [],
      "args": {
        "database": {
          "name": "database"
        },
        "value": {
          "name": "value"
        }
      },
      "description": "Include verbose details in execution plans.\n    This is equivalent to calling EXPLAIN VERBOSE.",
      "flags": {
        "app": {
          "char": "a",
          "description": "app to run command against",
          "name": "app",
          "required": true,
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        },
        "remote": {
          "char": "r",
          "description": "git remote of app to use",
          "name": "remote",
          "hasDynamicHelp": false,
          "multiple": false,
          "type": "option"
        }
      },
      "hasDynamicHelp": false,
      "hiddenAliases": [],
      "id": "pg:settings:auto-explain:log-verbose",
      "pluginAlias": "heroku",
      "pluginName": "heroku",
      "pluginType": "core",
      "topic": "pg",
      "isESM": false,
      "relativePath": [
        "lib",
        "commands",
        "pg",
        "settings",
        "auto-explain",
        "log-verbose.js"
      ]
    }
  },
  "version": "9.1.0"
}